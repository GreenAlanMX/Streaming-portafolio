version: '3.8'

services:
  mongodb:
    image: mongo:7.0
    container_name: streaming_mongodb
    restart: always
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: streaming123
      MONGO_INITDB_DATABASE: streaming_platform
    volumes:
      - mongodb_data:/data/db
      - mongodb_config:/data/configdb
      - ./mongo-init:/docker-entrypoint-initdb.d
      - ./scripts:/scripts
    networks:
      - streaming_network

  mongo-express:
    image: mongo-express:1.0.0-alpha
    container_name: streaming_mongo_express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: streaming123
      ME_CONFIG_MONGODB_URL: mongodb://admin:streaming123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: streaming123
    depends_on:
      - mongodb
    networks:
      - streaming_network

  # Script runner service para ejecutar el script después de que MongoDB esté listo
  script-runner:
    image: mongo:7.0
    container_name: streaming_script_runner
    depends_on:
      - mongodb
    volumes:
      - ./scripts:/scripts
    networks:
      - streaming_network
    command: >
      bash -c "
        echo 'Esperando a que MongoDB esté disponible...'
        sleep 15
        echo 'Ejecutando script de inicialización...'
        mongosh --host mongodb:27017 -u admin -p streaming123 --authenticationDatabase admin /scripts/init-streaming-db.js
        echo 'Ejecutando análisis de rendimiento...'
        mongosh --host mongodb:27017 -u admin -p streaming123 --authenticationDatabase admin /scripts/performance-comparison.js
        echo 'Todos los scripts ejecutados exitosamente!'
        sleep infinity
      "
    restart: "no"

volumes:
  mongodb_data:
    driver: local
  mongodb_config:
    driver: local

networks:
  streaming_network:
    driver: bridge