{
  "cells": [
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "# Phase 3: Data Visualization - Activity 3.1: Interactive Dashboards\n",
        "\n",
        "## Deliverables:\n",
        "- Executive KPI dashboard with real-time metrics\n",
        "- Interactive visualizations by user segments  \n",
        "- Temporal trend analysis with drill-down capabilities\n",
        "- Geographic comparison dashboards\n",
        "- Mobile-responsive design implementation\n",
        "\n",
        "## Required Dashboard Components:\n",
        "1. **Executive Summary**: Key metrics overview\n",
        "2. **User Analytics**: Demographics and behavior\n",
        "3. **Content Performance**: Popularity and engagement metrics\n",
        "4. **Financial Insights**: Revenue and cost analysis\n",
        "5. **Geographic Analysis**: Regional performance comparison\n",
        "\n",
        "## Data Source:\n",
        "- **Primary Dataset**: `user_aggregation_with_clusters.csv` (5,001 users with aggregated metrics)\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 3,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Installing required packages for Phase 3: Interactive Dashboards...\n",
            "============================================================\n",
            "Installing pandas>=1.5.0...\n",
            "Requirement already satisfied: pandas>=1.5.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (2.3.2)\n",
            "Requirement already satisfied: numpy>=1.26.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.5.0) (2.3.3)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.5.0) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.5.0) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.5.0) (2025.2)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas>=1.5.0) (1.17.0)\n",
            " pandas>=1.5.0 installed successfully\n",
            "Installing numpy>=1.21.0...\n",
            "Requirement already satisfied: numpy>=1.21.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (2.3.3)\n",
            " numpy>=1.21.0 installed successfully\n",
            "Installing plotly>=5.0.0...\n",
            "Collecting plotly>=5.0.0\n",
            "  Using cached plotly-6.3.0-py3-none-any.whl.metadata (8.5 kB)\n",
            "Collecting narwhals>=1.15.1 (from plotly>=5.0.0)\n",
            "  Using cached narwhals-2.5.0-py3-none-any.whl.metadata (11 kB)\n",
            "Requirement already satisfied: packaging in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from plotly>=5.0.0) (25.0)\n",
            "Using cached plotly-6.3.0-py3-none-any.whl (9.8 MB)\n",
            "Using cached narwhals-2.5.0-py3-none-any.whl (407 kB)\n",
            "Installing collected packages: narwhals, plotly\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2/2\u001b[0m [plotly]2m1/2\u001b[0m [plotly]\n",
            "\u001b[1A\u001b[2KSuccessfully installed narwhals-2.5.0 plotly-6.3.0\n",
            " plotly>=5.0.0 installed successfully\n",
            "Installing seaborn>=0.11.0...\n",
            "Requirement already satisfied: seaborn>=0.11.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (0.13.2)\n",
            "Requirement already satisfied: numpy!=1.24.0,>=1.20 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from seaborn>=0.11.0) (2.3.3)\n",
            "Requirement already satisfied: pandas>=1.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from seaborn>=0.11.0) (2.3.2)\n",
            "Requirement already satisfied: matplotlib!=3.6.1,>=3.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from seaborn>=0.11.0) (3.10.6)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (1.3.3)\n",
            "Requirement already satisfied: cycler>=0.10 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (4.60.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (1.4.9)\n",
            "Requirement already satisfied: packaging>=20.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (25.0)\n",
            "Requirement already satisfied: pillow>=8 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (11.3.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (3.2.4)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.2->seaborn>=0.11.0) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas>=1.2->seaborn>=0.11.0) (2025.2)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.7->matplotlib!=3.6.1,>=3.4->seaborn>=0.11.0) (1.17.0)\n",
            " seaborn>=0.11.0 installed successfully\n",
            "Installing matplotlib>=3.5.0...\n",
            "Requirement already satisfied: matplotlib>=3.5.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (3.10.6)\n",
            "Requirement already satisfied: contourpy>=1.0.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (1.3.3)\n",
            "Requirement already satisfied: cycler>=0.10 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (0.12.1)\n",
            "Requirement already satisfied: fonttools>=4.22.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (4.60.0)\n",
            "Requirement already satisfied: kiwisolver>=1.3.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (1.4.9)\n",
            "Requirement already satisfied: numpy>=1.23 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (2.3.3)\n",
            "Requirement already satisfied: packaging>=20.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (25.0)\n",
            "Requirement already satisfied: pillow>=8 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (11.3.0)\n",
            "Requirement already satisfied: pyparsing>=2.3.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (3.2.4)\n",
            "Requirement already satisfied: python-dateutil>=2.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from matplotlib>=3.5.0) (2.9.0.post0)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.7->matplotlib>=3.5.0) (1.17.0)\n",
            " matplotlib>=3.5.0 installed successfully\n",
            "Installing streamlit>=1.28.0...\n",
            "Collecting streamlit>=1.28.0\n",
            "  Downloading streamlit-1.50.0-py3-none-any.whl.metadata (9.5 kB)\n",
            "Collecting altair!=5.4.0,!=5.4.1,<6,>=4.0 (from streamlit>=1.28.0)\n",
            "  Using cached altair-5.5.0-py3-none-any.whl.metadata (11 kB)\n",
            "Collecting blinker<2,>=1.5.0 (from streamlit>=1.28.0)\n",
            "  Using cached blinker-1.9.0-py3-none-any.whl.metadata (1.6 kB)\n",
            "Collecting cachetools<7,>=4.0 (from streamlit>=1.28.0)\n",
            "  Using cached cachetools-6.2.0-py3-none-any.whl.metadata (5.4 kB)\n",
            "Collecting click<9,>=7.0 (from streamlit>=1.28.0)\n",
            "  Using cached click-8.3.0-py3-none-any.whl.metadata (2.6 kB)\n",
            "Requirement already satisfied: numpy<3,>=1.23 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (2.3.3)\n",
            "Requirement already satisfied: packaging<26,>=20 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (25.0)\n",
            "Requirement already satisfied: pandas<3,>=1.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (2.3.2)\n",
            "Requirement already satisfied: pillow<12,>=7.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (11.3.0)\n",
            "Collecting protobuf<7,>=3.20 (from streamlit>=1.28.0)\n",
            "  Using cached protobuf-6.32.1-cp39-abi3-macosx_10_9_universal2.whl.metadata (593 bytes)\n",
            "Collecting pyarrow>=7.0 (from streamlit>=1.28.0)\n",
            "  Using cached pyarrow-21.0.0-cp313-cp313-macosx_12_0_arm64.whl.metadata (3.3 kB)\n",
            "Requirement already satisfied: requests<3,>=2.27 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (2.32.5)\n",
            "Collecting tenacity<10,>=8.1.0 (from streamlit>=1.28.0)\n",
            "  Using cached tenacity-9.1.2-py3-none-any.whl.metadata (1.2 kB)\n",
            "Collecting toml<2,>=0.10.1 (from streamlit>=1.28.0)\n",
            "  Using cached toml-0.10.2-py2.py3-none-any.whl.metadata (7.1 kB)\n",
            "Requirement already satisfied: typing-extensions<5,>=4.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (4.15.0)\n",
            "Collecting gitpython!=3.1.19,<4,>=3.0.7 (from streamlit>=1.28.0)\n",
            "  Using cached gitpython-3.1.45-py3-none-any.whl.metadata (13 kB)\n",
            "Collecting pydeck<1,>=0.8.0b4 (from streamlit>=1.28.0)\n",
            "  Using cached pydeck-0.9.1-py2.py3-none-any.whl.metadata (4.1 kB)\n",
            "Requirement already satisfied: tornado!=6.5.0,<7,>=6.0.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from streamlit>=1.28.0) (6.5.2)\n",
            "Requirement already satisfied: jinja2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (3.1.6)\n",
            "Requirement already satisfied: jsonschema>=3.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (4.25.1)\n",
            "Requirement already satisfied: narwhals>=1.14.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (2.5.0)\n",
            "Collecting gitdb<5,>=4.0.1 (from gitpython!=3.1.19,<4,>=3.0.7->streamlit>=1.28.0)\n",
            "  Using cached gitdb-4.0.12-py3-none-any.whl.metadata (1.2 kB)\n",
            "Collecting smmap<6,>=3.0.1 (from gitdb<5,>=4.0.1->gitpython!=3.1.19,<4,>=3.0.7->streamlit>=1.28.0)\n",
            "  Using cached smmap-5.0.2-py3-none-any.whl.metadata (4.3 kB)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas<3,>=1.4.0->streamlit>=1.28.0) (2.9.0.post0)\n",
            "Requirement already satisfied: pytz>=2020.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas<3,>=1.4.0->streamlit>=1.28.0) (2025.2)\n",
            "Requirement already satisfied: tzdata>=2022.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pandas<3,>=1.4.0->streamlit>=1.28.0) (2025.2)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests<3,>=2.27->streamlit>=1.28.0) (3.4.3)\n",
            "Requirement already satisfied: idna<4,>=2.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests<3,>=2.27->streamlit>=1.28.0) (3.10)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests<3,>=2.27->streamlit>=1.28.0) (2.5.0)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests<3,>=2.27->streamlit>=1.28.0) (2025.8.3)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jinja2->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (2025.9.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=3.0->altair!=5.4.0,!=5.4.1,<6,>=4.0->streamlit>=1.28.0) (0.27.1)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->pandas<3,>=1.4.0->streamlit>=1.28.0) (1.17.0)\n",
            "Downloading streamlit-1.50.0-py3-none-any.whl (10.1 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m10.1/10.1 MB\u001b[0m \u001b[31m74.1 kB/s\u001b[0m  \u001b[33m0:01:53\u001b[0mm0:00:02\u001b[0m0:05\u001b[0mm\n",
            "\u001b[?25hUsing cached altair-5.5.0-py3-none-any.whl (731 kB)\n",
            "Using cached blinker-1.9.0-py3-none-any.whl (8.5 kB)\n",
            "Using cached cachetools-6.2.0-py3-none-any.whl (11 kB)\n",
            "Using cached click-8.3.0-py3-none-any.whl (107 kB)\n",
            "Using cached gitpython-3.1.45-py3-none-any.whl (208 kB)\n",
            "Using cached gitdb-4.0.12-py3-none-any.whl (62 kB)\n",
            "Using cached protobuf-6.32.1-cp39-abi3-macosx_10_9_universal2.whl (426 kB)\n",
            "Using cached pydeck-0.9.1-py2.py3-none-any.whl (6.9 MB)\n",
            "Using cached smmap-5.0.2-py3-none-any.whl (24 kB)\n",
            "Using cached tenacity-9.1.2-py3-none-any.whl (28 kB)\n",
            "Using cached toml-0.10.2-py2.py3-none-any.whl (16 kB)\n",
            "Using cached pyarrow-21.0.0-cp313-cp313-macosx_12_0_arm64.whl (31.2 MB)\n",
            "Installing collected packages: toml, tenacity, smmap, pyarrow, protobuf, click, cachetools, blinker, pydeck, gitdb, gitpython, altair, streamlit\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m13/13\u001b[0m [streamlit]13\u001b[0m [streamlit]\n",
            "\u001b[1A\u001b[2KSuccessfully installed altair-5.5.0 blinker-1.9.0 cachetools-6.2.0 click-8.3.0 gitdb-4.0.12 gitpython-3.1.45 protobuf-6.32.1 pyarrow-21.0.0 pydeck-0.9.1 smmap-5.0.2 streamlit-1.50.0 tenacity-9.1.2 toml-0.10.2\n",
            " streamlit>=1.28.0 installed successfully\n",
            "Installing pymongo>=4.0.0...\n",
            "Requirement already satisfied: pymongo>=4.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (4.15.1)\n",
            "Requirement already satisfied: dnspython<3.0.0,>=1.16.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pymongo>=4.0.0) (2.8.0)\n",
            " pymongo>=4.0.0 installed successfully\n",
            "Installing psycopg2-binary>=2.9.0...\n",
            "Requirement already satisfied: psycopg2-binary>=2.9.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (2.9.10)\n",
            " psycopg2-binary>=2.9.0 installed successfully\n",
            "Installing sqlalchemy>=1.4.0...\n",
            "Collecting sqlalchemy>=1.4.0\n",
            "  Downloading sqlalchemy-2.0.43-cp313-cp313-macosx_11_0_arm64.whl.metadata (9.6 kB)\n",
            "Requirement already satisfied: typing-extensions>=4.6.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from sqlalchemy>=1.4.0) (4.15.0)\n",
            "Downloading sqlalchemy-2.0.43-cp313-cp313-macosx_11_0_arm64.whl (2.1 MB)\n",
            "\u001b[2K   \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m2.1/2.1 MB\u001b[0m \u001b[31m42.8 kB/s\u001b[0m  \u001b[33m0:00:50\u001b[0m eta \u001b[36m0:00:08\u001b[0m\n",
            "\u001b[?25hInstalling collected packages: sqlalchemy\n",
            "Successfully installed sqlalchemy-2.0.43\n",
            " sqlalchemy>=1.4.0 installed successfully\n",
            "Installing jupyter>=1.0.0...\n",
            "Requirement already satisfied: jupyter>=1.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (1.1.1)\n",
            "Requirement already satisfied: notebook in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (7.4.5)\n",
            "Requirement already satisfied: jupyter-console in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (6.6.3)\n",
            "Requirement already satisfied: nbconvert in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (7.16.6)\n",
            "Requirement already satisfied: ipykernel in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (6.30.1)\n",
            "Requirement already satisfied: ipywidgets in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (8.1.7)\n",
            "Requirement already satisfied: jupyterlab in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter>=1.0.0) (4.4.7)\n",
            "Requirement already satisfied: appnope>=0.1.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (0.1.4)\n",
            "Requirement already satisfied: comm>=0.1.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (0.2.3)\n",
            "Requirement already satisfied: debugpy>=1.6.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (1.8.17)\n",
            "Requirement already satisfied: ipython>=7.23.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (9.5.0)\n",
            "Requirement already satisfied: jupyter-client>=8.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (8.6.3)\n",
            "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (5.8.1)\n",
            "Requirement already satisfied: matplotlib-inline>=0.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (0.1.7)\n",
            "Requirement already satisfied: nest-asyncio>=1.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (1.6.0)\n",
            "Requirement already satisfied: packaging>=22 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (25.0)\n",
            "Requirement already satisfied: psutil>=5.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (7.1.0)\n",
            "Requirement already satisfied: pyzmq>=25 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (27.1.0)\n",
            "Requirement already satisfied: tornado>=6.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (6.5.2)\n",
            "Requirement already satisfied: traitlets>=5.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel->jupyter>=1.0.0) (5.14.3)\n",
            "Requirement already satisfied: decorator in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (5.2.1)\n",
            "Requirement already satisfied: ipython-pygments-lexers in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (1.1.1)\n",
            "Requirement already satisfied: jedi>=0.16 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.19.2)\n",
            "Requirement already satisfied: pexpect>4.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (4.9.0)\n",
            "Requirement already satisfied: prompt_toolkit<3.1.0,>=3.0.41 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (3.0.52)\n",
            "Requirement already satisfied: pygments>=2.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (2.19.2)\n",
            "Requirement already satisfied: stack_data in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.6.3)\n",
            "Requirement already satisfied: wcwidth in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from prompt_toolkit<3.1.0,>=3.0.41->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.2.13)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jedi>=0.16->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.8.5)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-client>=8.0.0->ipykernel->jupyter>=1.0.0) (2.9.0.post0)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel->jupyter>=1.0.0) (4.4.0)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pexpect>4.3->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.7.0)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->jupyter-client>=8.0.0->ipykernel->jupyter>=1.0.0) (1.17.0)\n",
            "Requirement already satisfied: widgetsnbextension~=4.0.14 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipywidgets->jupyter>=1.0.0) (4.0.14)\n",
            "Requirement already satisfied: jupyterlab_widgets~=3.0.15 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipywidgets->jupyter>=1.0.0) (3.0.15)\n",
            "Requirement already satisfied: async-lru>=1.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (2.0.5)\n",
            "Requirement already satisfied: httpx<1,>=0.25.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (0.28.1)\n",
            "Requirement already satisfied: jinja2>=3.0.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (3.1.6)\n",
            "Requirement already satisfied: jupyter-lsp>=2.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (2.3.0)\n",
            "Requirement already satisfied: jupyter-server<3,>=2.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (2.17.0)\n",
            "Requirement already satisfied: jupyterlab-server<3,>=2.27.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (2.27.3)\n",
            "Requirement already satisfied: notebook-shim>=0.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (0.2.4)\n",
            "Requirement already satisfied: setuptools>=41.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab->jupyter>=1.0.0) (80.9.0)\n",
            "Requirement already satisfied: anyio in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (4.10.0)\n",
            "Requirement already satisfied: certifi in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (2025.8.3)\n",
            "Requirement already satisfied: httpcore==1.* in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (1.0.9)\n",
            "Requirement already satisfied: idna in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (3.10)\n",
            "Requirement already satisfied: h11>=0.16 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from httpcore==1.*->httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (0.16.0)\n",
            "Requirement already satisfied: argon2-cffi>=21.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (25.1.0)\n",
            "Requirement already satisfied: jupyter-events>=0.11.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.12.0)\n",
            "Requirement already satisfied: jupyter-server-terminals>=0.4.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.5.3)\n",
            "Requirement already satisfied: nbformat>=5.3.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (5.10.4)\n",
            "Requirement already satisfied: prometheus-client>=0.9 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.23.1)\n",
            "Requirement already satisfied: send2trash>=1.8.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.8.3)\n",
            "Requirement already satisfied: terminado>=0.8.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.18.1)\n",
            "Requirement already satisfied: websocket-client>=1.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.8.0)\n",
            "Requirement already satisfied: babel>=2.10 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (2.17.0)\n",
            "Requirement already satisfied: json5>=0.9.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (0.12.1)\n",
            "Requirement already satisfied: jsonschema>=4.18.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (4.25.1)\n",
            "Requirement already satisfied: requests>=2.31 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (2.32.5)\n",
            "Requirement already satisfied: sniffio>=1.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from anyio->httpx<1,>=0.25.0->jupyterlab->jupyter>=1.0.0) (1.3.1)\n",
            "Requirement already satisfied: argon2-cffi-bindings in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (25.1.0)\n",
            "Requirement already satisfied: MarkupSafe>=2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jinja2>=3.0.3->jupyterlab->jupyter>=1.0.0) (3.0.2)\n",
            "Requirement already satisfied: attrs>=22.2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (25.3.0)\n",
            "Requirement already satisfied: jsonschema-specifications>=2023.03.6 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (2025.9.1)\n",
            "Requirement already satisfied: referencing>=0.28.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (0.36.2)\n",
            "Requirement already satisfied: rpds-py>=0.7.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema>=4.18.0->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (0.27.1)\n",
            "Requirement already satisfied: python-json-logger>=2.0.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (3.3.0)\n",
            "Requirement already satisfied: pyyaml>=5.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (6.0.2)\n",
            "Requirement already satisfied: rfc3339-validator in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.1.4)\n",
            "Requirement already satisfied: rfc3986-validator>=0.1.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (0.1.1)\n",
            "Requirement already satisfied: fqdn in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.5.1)\n",
            "Requirement already satisfied: isoduration in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (20.11.0)\n",
            "Requirement already satisfied: jsonpointer>1.13 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (3.0.0)\n",
            "Requirement already satisfied: rfc3987-syntax>=1.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.1.0)\n",
            "Requirement already satisfied: uri-template in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.3.0)\n",
            "Requirement already satisfied: webcolors>=24.6.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (24.11.1)\n",
            "Requirement already satisfied: beautifulsoup4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (4.13.5)\n",
            "Requirement already satisfied: bleach!=5.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0) (6.2.0)\n",
            "Requirement already satisfied: defusedxml in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (0.7.1)\n",
            "Requirement already satisfied: jupyterlab-pygments in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (0.3.0)\n",
            "Requirement already satisfied: mistune<4,>=2.0.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (3.1.4)\n",
            "Requirement already satisfied: nbclient>=0.5.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (0.10.2)\n",
            "Requirement already satisfied: pandocfilters>=1.4.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbconvert->jupyter>=1.0.0) (1.5.1)\n",
            "Requirement already satisfied: webencodings in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from bleach!=5.0.0->bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0) (0.5.1)\n",
            "Requirement already satisfied: tinycss2<1.5,>=1.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from bleach[css]!=5.0.0->nbconvert->jupyter>=1.0.0) (1.4.0)\n",
            "Requirement already satisfied: fastjsonschema>=2.15 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from nbformat>=5.3.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (2.21.2)\n",
            "Requirement already satisfied: charset_normalizer<4,>=2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (3.4.3)\n",
            "Requirement already satisfied: urllib3<3,>=1.21.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from requests>=2.31->jupyterlab-server<3,>=2.27.1->jupyterlab->jupyter>=1.0.0) (2.5.0)\n",
            "Requirement already satisfied: lark>=1.2.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from rfc3987-syntax>=1.1.0->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.2.2)\n",
            "Requirement already satisfied: cffi>=1.0.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (2.0.0)\n",
            "Requirement already satisfied: pycparser in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from cffi>=1.0.1->argon2-cffi-bindings->argon2-cffi>=21.1->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (2.23)\n",
            "Requirement already satisfied: soupsieve>1.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from beautifulsoup4->nbconvert->jupyter>=1.0.0) (2.8)\n",
            "Requirement already satisfied: typing-extensions>=4.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from beautifulsoup4->nbconvert->jupyter>=1.0.0) (4.15.0)\n",
            "Requirement already satisfied: arrow>=0.15.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (1.3.0)\n",
            "Requirement already satisfied: types-python-dateutil>=2.8.10 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from arrow>=0.15.0->isoduration->jsonschema[format-nongpl]>=4.18.0->jupyter-events>=0.11.0->jupyter-server<3,>=2.4.0->jupyterlab->jupyter>=1.0.0) (2.9.0.20250822)\n",
            "Requirement already satisfied: executing>=1.2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (2.2.1)\n",
            "Requirement already satisfied: asttokens>=2.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (3.0.0)\n",
            "Requirement already satisfied: pure-eval in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel->jupyter>=1.0.0) (0.2.3)\n",
            " jupyter>=1.0.0 installed successfully\n",
            "Installing ipykernel>=6.0.0...\n",
            "Requirement already satisfied: ipykernel>=6.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (6.30.1)\n",
            "Requirement already satisfied: appnope>=0.1.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (0.1.4)\n",
            "Requirement already satisfied: comm>=0.1.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (0.2.3)\n",
            "Requirement already satisfied: debugpy>=1.6.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (1.8.17)\n",
            "Requirement already satisfied: ipython>=7.23.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (9.5.0)\n",
            "Requirement already satisfied: jupyter-client>=8.0.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (8.6.3)\n",
            "Requirement already satisfied: jupyter-core!=5.0.*,>=4.12 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (5.8.1)\n",
            "Requirement already satisfied: matplotlib-inline>=0.1 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (0.1.7)\n",
            "Requirement already satisfied: nest-asyncio>=1.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (1.6.0)\n",
            "Requirement already satisfied: packaging>=22 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (25.0)\n",
            "Requirement already satisfied: psutil>=5.7 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (7.1.0)\n",
            "Requirement already satisfied: pyzmq>=25 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (27.1.0)\n",
            "Requirement already satisfied: tornado>=6.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (6.5.2)\n",
            "Requirement already satisfied: traitlets>=5.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipykernel>=6.0.0) (5.14.3)\n",
            "Requirement already satisfied: decorator in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (5.2.1)\n",
            "Requirement already satisfied: ipython-pygments-lexers in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (1.1.1)\n",
            "Requirement already satisfied: jedi>=0.16 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (0.19.2)\n",
            "Requirement already satisfied: pexpect>4.3 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (4.9.0)\n",
            "Requirement already satisfied: prompt_toolkit<3.1.0,>=3.0.41 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (3.0.52)\n",
            "Requirement already satisfied: pygments>=2.4.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (2.19.2)\n",
            "Requirement already satisfied: stack_data in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from ipython>=7.23.1->ipykernel>=6.0.0) (0.6.3)\n",
            "Requirement already satisfied: wcwidth in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from prompt_toolkit<3.1.0,>=3.0.41->ipython>=7.23.1->ipykernel>=6.0.0) (0.2.13)\n",
            "Requirement already satisfied: parso<0.9.0,>=0.8.4 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jedi>=0.16->ipython>=7.23.1->ipykernel>=6.0.0) (0.8.5)\n",
            "Requirement already satisfied: python-dateutil>=2.8.2 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-client>=8.0.0->ipykernel>=6.0.0) (2.9.0.post0)\n",
            "Requirement already satisfied: platformdirs>=2.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from jupyter-core!=5.0.*,>=4.12->ipykernel>=6.0.0) (4.4.0)\n",
            "Requirement already satisfied: ptyprocess>=0.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from pexpect>4.3->ipython>=7.23.1->ipykernel>=6.0.0) (0.7.0)\n",
            "Requirement already satisfied: six>=1.5 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from python-dateutil>=2.8.2->jupyter-client>=8.0.0->ipykernel>=6.0.0) (1.17.0)\n",
            "Requirement already satisfied: executing>=1.2.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0) (2.2.1)\n",
            "Requirement already satisfied: asttokens>=2.1.0 in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0) (3.0.0)\n",
            "Requirement already satisfied: pure-eval in /Users/janeth/Streaming_Portfolio/.venv/lib/python3.13/site-packages (from stack_data->ipython>=7.23.1->ipykernel>=6.0.0) (0.2.3)\n",
            " ipykernel>=6.0.0 installed successfully\n",
            "============================================================\n",
            "Installation completed! Please restart the kernel and run the next cell.\n"
          ]
        }
      ],
      "source": [
        "# Install required dependencies for Phase 3: Interactive Dashboards\n",
        "# Run this cell first to install all necessary libraries\n",
        "\n",
        "import subprocess\n",
        "import sys\n",
        "\n",
        "def install_package(package):\n",
        "    \"\"\"Install a package using pip\"\"\"\n",
        "    subprocess.check_call([sys.executable, \"-m\", \"pip\", \"install\", package])\n",
        "\n",
        "# List of required packages\n",
        "required_packages = [\n",
        "    \"pandas>=1.5.0\",\n",
        "    \"numpy>=1.21.0\", \n",
        "    \"plotly>=5.0.0\",\n",
        "    \"seaborn>=0.11.0\",\n",
        "    \"matplotlib>=3.5.0\",\n",
        "    \"streamlit>=1.28.0\",\n",
        "    \"pymongo>=4.0.0\",\n",
        "    \"psycopg2-binary>=2.9.0\",\n",
        "    \"sqlalchemy>=1.4.0\",\n",
        "    \"jupyter>=1.0.0\",\n",
        "    \"ipykernel>=6.0.0\"\n",
        "]\n",
        "\n",
        "print(\"Installing required packages for Phase 3: Interactive Dashboards...\")\n",
        "print(\"=\" * 60)\n",
        "\n",
        "for package in required_packages:\n",
        "    try:\n",
        "        print(f\"Installing {package}...\")\n",
        "        install_package(package)\n",
        "        print(f\" {package} installed successfully\")\n",
        "    except Exception as e:\n",
        "        print(f\"Error installing {package}: {e}\")\n",
        "\n",
        "print(\"=\" * 60)\n",
        "print(\"Installation completed! Please restart the kernel and run the next cell.\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 1,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Libraries imported successfully!\n",
            "Ready to create interactive dashboards\n"
          ]
        }
      ],
      "source": [
        "# Import required libraries for interactive dashboards\n",
        "import pandas as pd\n",
        "import numpy as np\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "from plotly.subplots import make_subplots\n",
        "import plotly.figure_factory as ff\n",
        "import seaborn as sns\n",
        "import matplotlib.pyplot as plt\n",
        "import warnings\n",
        "warnings.filterwarnings('ignore')\n",
        "\n",
        "# Set style for better visualizations\n",
        "plt.style.use('seaborn-v0_8')\n",
        "sns.set_palette(\"husl\")\n",
        "\n",
        "print(\"Libraries imported successfully!\")\n",
        "print(\"Ready to create interactive dashboards\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "=== DATASET OVERVIEW ===\n",
            "Shape: (5000, 13)\n",
            "Columns: ['user_id', 'sessions_count', 'avg_duration', 'duration_std', 'avg_completion', 'completion_std', 'unique_content', 'age', 'subscription_type', 'country', 'cluster_kmeans', 'retained', 'subscription_numeric']\n",
            "\n",
            "First 3 rows:\n",
            "  user_id  sessions_count  avg_duration  duration_std  avg_completion  \\\n",
            "0   U0001              29     72.586207     45.652818        0.623759   \n",
            "1   U0002              48     87.854167     46.165286        0.794521   \n",
            "2   U0003              17     72.529412     48.972081        0.710824   \n",
            "\n",
            "   completion_std  unique_content  age subscription_type    country  \\\n",
            "0        0.252768              28   21             Basic  Argentina   \n",
            "1        0.216895              47   44          Standard     Mexico   \n",
            "2        0.294652              16   20          Standard  Argentina   \n",
            "\n",
            "   cluster_kmeans  retained  subscription_numeric  \n",
            "0               1         1                     1  \n",
            "1               2         1                     2  \n",
            "2               1         1                     2  \n",
            "\n",
            "=== DATA TYPES ===\n",
            "user_id                  object\n",
            "sessions_count            int64\n",
            "avg_duration            float64\n",
            "duration_std            float64\n",
            "avg_completion          float64\n",
            "completion_std          float64\n",
            "unique_content            int64\n",
            "age                       int64\n",
            "subscription_type        object\n",
            "country                  object\n",
            "cluster_kmeans            int64\n",
            "retained                  int64\n",
            "subscription_numeric      int64\n",
            "dtype: object\n",
            "\n",
            "=== BASIC STATISTICS ===\n",
            "       sessions_count  avg_duration  duration_std  avg_completion  \\\n",
            "count      5000.00000   5000.000000   5000.000000     5000.000000   \n",
            "mean         44.55700     77.418952     43.663463        0.769053   \n",
            "std          22.43405     11.955183      4.405392        0.097729   \n",
            "min           8.00000     28.909091     17.175044        0.360556   \n",
            "25%          26.00000     68.664286     41.198781        0.691244   \n",
            "50%          43.00000     78.037241     43.952674        0.770922   \n",
            "75%          60.00000     86.260135     46.444866        0.861538   \n",
            "max         104.00000    126.400000     63.217171        0.959643   \n",
            "\n",
            "       completion_std  unique_content          age  cluster_kmeans  \\\n",
            "count     5000.000000     5000.000000  5000.000000     5000.000000   \n",
            "mean         0.194132       40.239600    41.591000        1.571400   \n",
            "std          0.058263       18.739873    13.927746        1.105598   \n",
            "min          0.056343        7.000000    18.000000        0.000000   \n",
            "25%          0.136968       25.000000    30.000000        1.000000   \n",
            "50%          0.209094       40.000000    42.000000        2.000000   \n",
            "75%          0.241588       54.000000    54.000000        3.000000   \n",
            "max          0.368075       92.000000    65.000000        3.000000   \n",
            "\n",
            "          retained  subscription_numeric  \n",
            "count  5000.000000           5000.000000  \n",
            "mean      0.998400              1.842200  \n",
            "std       0.039972              0.786526  \n",
            "min       0.000000              1.000000  \n",
            "25%       1.000000              1.000000  \n",
            "50%       1.000000              2.000000  \n",
            "75%       1.000000              2.000000  \n",
            "max       1.000000              3.000000  \n"
          ]
        }
      ],
      "source": [
        "# Load the main dataset\n",
        "df = pd.read_csv('/Users/janeth/Streaming_Portfolio/notebooks/output/user_aggregation_with_clusters.csv')\n",
        "\n",
        "print(\"=== DATASET OVERVIEW ===\")\n",
        "print(f\"Shape: {df.shape}\")\n",
        "print(f\"Columns: {list(df.columns)}\")\n",
        "print(f\"\\nFirst 3 rows:\")\n",
        "print(df.head(3))\n",
        "\n",
        "print(f\"\\n=== DATA TYPES ===\")\n",
        "print(df.dtypes)\n",
        "\n",
        "print(f\"\\n=== BASIC STATISTICS ===\")\n",
        "print(df.describe())\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## 1. Executive Summary - Key Metrics Overview\n",
        "\n",
        "This section provides high-level KPIs and real-time metrics for executive decision making.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "=== EXECUTIVE KPI DASHBOARD ===\n",
            " KEY PERFORMANCE INDICATORS\n",
            "==================================================\n",
            "Total Users: 5000\n",
            "Total Sessions: 222785\n",
            "Avg Sessions Per User: 44.56\n",
            "Avg Session Duration: 77.42\n",
            "Avg Completion Rate: 76.91\n",
            "Premium Percentage: 24.28\n",
            "Retention Rate: 99.84\n",
            "Total Countries: 5\n",
            "Top Country: Mexico\n",
            "Top Country Users: 1514\n",
            "Avg Unique Content: 40.24\n",
            "Total Clusters: 4\n"
          ]
        }
      ],
      "source": [
        "# Calculate Executive KPIs\n",
        "def calculate_executive_kpis():\n",
        "    \"\"\"Calculate key performance indicators for executive dashboard\"\"\"\n",
        "    \n",
        "    # Basic metrics\n",
        "    total_users = len(df)\n",
        "    total_sessions = df['sessions_count'].sum()\n",
        "    avg_sessions_per_user = df['sessions_count'].mean()\n",
        "    avg_session_duration = df['avg_duration'].mean()\n",
        "    avg_completion_rate = df['avg_completion'].mean()\n",
        "    \n",
        "    # Financial metrics\n",
        "    premium_users = df[df['subscription_type'] == 'Premium'].shape[0]\n",
        "    premium_percentage = (premium_users / total_users) * 100\n",
        "    \n",
        "    # Retention metrics\n",
        "    retained_users = df['retained'].sum()\n",
        "    retention_rate = (retained_users / total_users) * 100\n",
        "    \n",
        "    # Geographic metrics\n",
        "    total_countries = df['country'].nunique()\n",
        "    top_country = df['country'].value_counts().head(1).index[0]\n",
        "    top_country_users = df['country'].value_counts().head(1).iloc[0]\n",
        "    \n",
        "    # Content engagement\n",
        "    avg_unique_content = df['unique_content'].mean()\n",
        "    \n",
        "    # User segmentation\n",
        "    total_clusters = df['cluster_kmeans'].nunique()\n",
        "    \n",
        "    kpis = {\n",
        "        'total_users': total_users,\n",
        "        'total_sessions': total_sessions,\n",
        "        'avg_sessions_per_user': round(avg_sessions_per_user, 2),\n",
        "        'avg_session_duration': round(avg_session_duration, 2),\n",
        "        'avg_completion_rate': round(avg_completion_rate * 100, 2),\n",
        "        'premium_percentage': round(premium_percentage, 2),\n",
        "        'retention_rate': round(retention_rate, 2),\n",
        "        'total_countries': total_countries,\n",
        "        'top_country': top_country,\n",
        "        'top_country_users': top_country_users,\n",
        "        'avg_unique_content': round(avg_unique_content, 2),\n",
        "        'total_clusters': total_clusters\n",
        "    }\n",
        "    \n",
        "    return kpis\n",
        "\n",
        "# Calculate KPIs\n",
        "kpis = calculate_executive_kpis()\n",
        "\n",
        "print(\"=== EXECUTIVE KPI DASHBOARD ===\")\n",
        "print(\" KEY PERFORMANCE INDICATORS\")\n",
        "print(\"=\" * 50)\n",
        "for key, value in kpis.items():\n",
        "    print(f\"{key.replace('_', ' ').title()}: {value}\")\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 6,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "application/vnd.plotly.v1+json": {
              "config": {
                "plotlyServerURL": "https://plot.ly"
              },
              "data": [
                {
                  "domain": {
                    "x": [
                      0,
                      0.2888888888888889
                    ],
                    "y": [
                      0.625,
                      1
                    ]
                  },
                  "mode": "number",
                  "number": {
                    "font": {
                      "size": 40
                    }
                  },
                  "title": {
                    "text": "Total Users"
                  },
                  "type": "indicator",
                  "value": 5000
                },
                {
                  "domain": {
                    "x": [
                      0.35555555555555557,
                      0.6444444444444445
                    ],
                    "y": [
                      0.625,
                      1
                    ]
                  },
                  "mode": "number",
                  "number": {
                    "font": {
                      "size": 40
                    }
                  },
                  "title": {
                    "text": "Total Sessions"
                  },
                  "type": "indicator",
                  "value": 222785
                },
                {
                  "domain": {
                    "x": [
                      0.7111111111111111,
                      1
                    ],
                    "y": [
                      0.625,
                      1
                    ]
                  },
                  "mode": "number+delta",
                  "number": {
                    "font": {
                      "size": 40
                    },
                    "suffix": "%"
                  },
                  "title": {
                    "text": "Retention Rate (%)"
                  },
                  "type": "indicator",
                  "value": 99.84
                },
                {
                  "domain": {
                    "x": [
                      0,
                      0.2888888888888889
                    ],
                    "y": [
                      0,
                      0.375
                    ]
                  },
                  "mode": "number+delta",
                  "number": {
                    "font": {
                      "size": 40
                    },
                    "suffix": "%"
                  },
                  "title": {
                    "text": "Premium Users (%)"
                  },
                  "type": "indicator",
                  "value": 24.28
                },
                {
                  "domain": {
                    "x": [
                      0.35555555555555557,
                      0.6444444444444445
                    ],
                    "y": [
                      0,
                      0.375
                    ]
                  },
                  "mode": "number",
                  "number": {
                    "font": {
                      "size": 40
                    },
                    "suffix": " min"
                  },
                  "title": {
                    "text": "Avg Session Duration (min)"
                  },
                  "type": "indicator",
                  "value": 77.42
                },
                {
                  "domain": {
                    "x": [
                      0.7111111111111111,
                      1
                    ],
                    "y": [
                      0,
                      0.375
                    ]
                  },
                  "mode": "number+delta",
                  "number": {
                    "font": {
                      "size": 40
                    },
                    "suffix": "%"
                  },
                  "title": {
                    "text": "Avg Completion Rate (%)"
                  },
                  "type": "indicator",
                  "value": 76.91
                }
              ],
              "layout": {
                "annotations": [
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Total Users",
                    "x": 0.14444444444444446,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Total Sessions",
                    "x": 0.5,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Retention Rate",
                    "x": 0.8555555555555556,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Premium Users %",
                    "x": 0.14444444444444446,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Avg Session Duration",
                    "x": 0.5,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Avg Completion Rate",
                    "x": 0.8555555555555556,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  }
                ],
                "height": 600,
                "showlegend": false,
                "template": {
                  "data": {
                    "bar": [
                      {
                        "error_x": {
                          "color": "#2a3f5f"
                        },
                        "error_y": {
                          "color": "#2a3f5f"
                        },
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "bar"
                      }
                    ],
                    "barpolar": [
                      {
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "barpolar"
                      }
                    ],
                    "carpet": [
                      {
                        "aaxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "baxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "type": "carpet"
                      }
                    ],
                    "choropleth": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "choropleth"
                      }
                    ],
                    "contour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "contour"
                      }
                    ],
                    "contourcarpet": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "contourcarpet"
                      }
                    ],
                    "heatmap": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "heatmap"
                      }
                    ],
                    "histogram": [
                      {
                        "marker": {
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "histogram"
                      }
                    ],
                    "histogram2d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2d"
                      }
                    ],
                    "histogram2dcontour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2dcontour"
                      }
                    ],
                    "mesh3d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "mesh3d"
                      }
                    ],
                    "parcoords": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "parcoords"
                      }
                    ],
                    "pie": [
                      {
                        "automargin": true,
                        "type": "pie"
                      }
                    ],
                    "scatter": [
                      {
                        "fillpattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        },
                        "type": "scatter"
                      }
                    ],
                    "scatter3d": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatter3d"
                      }
                    ],
                    "scattercarpet": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattercarpet"
                      }
                    ],
                    "scattergeo": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergeo"
                      }
                    ],
                    "scattergl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergl"
                      }
                    ],
                    "scattermap": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermap"
                      }
                    ],
                    "scattermapbox": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermapbox"
                      }
                    ],
                    "scatterpolar": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolar"
                      }
                    ],
                    "scatterpolargl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolargl"
                      }
                    ],
                    "scatterternary": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterternary"
                      }
                    ],
                    "surface": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "surface"
                      }
                    ],
                    "table": [
                      {
                        "cells": {
                          "fill": {
                            "color": "#EBF0F8"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "header": {
                          "fill": {
                            "color": "#C8D4E3"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "type": "table"
                      }
                    ]
                  },
                  "layout": {
                    "annotationdefaults": {
                      "arrowcolor": "#2a3f5f",
                      "arrowhead": 0,
                      "arrowwidth": 1
                    },
                    "autotypenumbers": "strict",
                    "coloraxis": {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      }
                    },
                    "colorscale": {
                      "diverging": [
                        [
                          0,
                          "#8e0152"
                        ],
                        [
                          0.1,
                          "#c51b7d"
                        ],
                        [
                          0.2,
                          "#de77ae"
                        ],
                        [
                          0.3,
                          "#f1b6da"
                        ],
                        [
                          0.4,
                          "#fde0ef"
                        ],
                        [
                          0.5,
                          "#f7f7f7"
                        ],
                        [
                          0.6,
                          "#e6f5d0"
                        ],
                        [
                          0.7,
                          "#b8e186"
                        ],
                        [
                          0.8,
                          "#7fbc41"
                        ],
                        [
                          0.9,
                          "#4d9221"
                        ],
                        [
                          1,
                          "#276419"
                        ]
                      ],
                      "sequential": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ],
                      "sequentialminus": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ]
                    },
                    "colorway": [
                      "#636efa",
                      "#EF553B",
                      "#00cc96",
                      "#ab63fa",
                      "#FFA15A",
                      "#19d3f3",
                      "#FF6692",
                      "#B6E880",
                      "#FF97FF",
                      "#FECB52"
                    ],
                    "font": {
                      "color": "#2a3f5f"
                    },
                    "geo": {
                      "bgcolor": "white",
                      "lakecolor": "white",
                      "landcolor": "white",
                      "showlakes": true,
                      "showland": true,
                      "subunitcolor": "#C8D4E3"
                    },
                    "hoverlabel": {
                      "align": "left"
                    },
                    "hovermode": "closest",
                    "mapbox": {
                      "style": "light"
                    },
                    "paper_bgcolor": "white",
                    "plot_bgcolor": "white",
                    "polar": {
                      "angularaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "radialaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      }
                    },
                    "scene": {
                      "xaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "yaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "zaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      }
                    },
                    "shapedefaults": {
                      "line": {
                        "color": "#2a3f5f"
                      }
                    },
                    "ternary": {
                      "aaxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "baxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "caxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      }
                    },
                    "title": {
                      "x": 0.05
                    },
                    "xaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    },
                    "yaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    }
                  }
                },
                "title": {
                  "text": "Executive KPI Dashboard - Real-time Metrics"
                }
              }
            }
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Executive KPI Dashboard - Interactive Visualizations\n",
        "fig_kpis = make_subplots(\n",
        "    rows=2, cols=3,\n",
        "    subplot_titles=('Total Users', 'Total Sessions', 'Retention Rate', \n",
        "                   'Premium Users %', 'Avg Session Duration', 'Avg Completion Rate'),\n",
        "    specs=[[{\"type\": \"indicator\"}, {\"type\": \"indicator\"}, {\"type\": \"indicator\"}],\n",
        "           [{\"type\": \"indicator\"}, {\"type\": \"indicator\"}, {\"type\": \"indicator\"}]]\n",
        ")\n",
        "\n",
        "# Add KPI indicators\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number\",\n",
        "    value = kpis['total_users'],\n",
        "    title = {\"text\": \"Total Users\"},\n",
        "    number = {'font': {'size': 40}}\n",
        "), row=1, col=1)\n",
        "\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number\",\n",
        "    value = kpis['total_sessions'],\n",
        "    title = {\"text\": \"Total Sessions\"},\n",
        "    number = {'font': {'size': 40}}\n",
        "), row=1, col=2)\n",
        "\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number+delta\",\n",
        "    value = kpis['retention_rate'],\n",
        "    title = {\"text\": \"Retention Rate (%)\"},\n",
        "    number = {'font': {'size': 40}, 'suffix': '%'}\n",
        "), row=1, col=3)\n",
        "\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number+delta\",\n",
        "    value = kpis['premium_percentage'],\n",
        "    title = {\"text\": \"Premium Users (%)\"},\n",
        "    number = {'font': {'size': 40}, 'suffix': '%'}\n",
        "), row=2, col=1)\n",
        "\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number\",\n",
        "    value = kpis['avg_session_duration'],\n",
        "    title = {\"text\": \"Avg Session Duration (min)\"},\n",
        "    number = {'font': {'size': 40}, 'suffix': ' min'}\n",
        "), row=2, col=2)\n",
        "\n",
        "fig_kpis.add_trace(go.Indicator(\n",
        "    mode = \"number+delta\",\n",
        "    value = kpis['avg_completion_rate'],\n",
        "    title = {\"text\": \"Avg Completion Rate (%)\"},\n",
        "    number = {'font': {'size': 40}, 'suffix': '%'}\n",
        "), row=2, col=3)\n",
        "\n",
        "fig_kpis.update_layout(\n",
        "    title=\"Executive KPI Dashboard - Real-time Metrics\",\n",
        "    height=600,\n",
        "    showlegend=False,\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_kpis.show()\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## 2. User Analytics - Demographics and Behavior\n",
        "\n",
        "Interactive visualizations by user segments with drill-down capabilities.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 7,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "application/vnd.plotly.v1+json": {
              "config": {
                "plotlyServerURL": "https://plot.ly"
              },
              "data": [
                {
                  "domain": {
                    "x": [
                      0,
                      0.45
                    ],
                    "y": [
                      0.625,
                      1
                    ]
                  },
                  "hovertemplate": "<b>%{label}</b><br>Users: %{value}<br>Percentage: %{percent}<extra></extra>",
                  "labels": [
                    "Cluster 2",
                    "Cluster 3",
                    "Cluster 0",
                    "Cluster 1"
                  ],
                  "name": "Clusters",
                  "type": "pie",
                  "values": {
                    "bdata": "jQUNBX4EcAQ=",
                    "dtype": "i2"
                  }
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>%{fullData.name}: %{y}<extra></extra>",
                  "name": "Basic",
                  "showlegend": true,
                  "type": "bar",
                  "x": [
                    "Cluster 0",
                    "Cluster 1",
                    "Cluster 2",
                    "Cluster 3"
                  ],
                  "xaxis": "x",
                  "y": {
                    "bdata": "JgCKA00B1gI=",
                    "dtype": "i2"
                  },
                  "yaxis": "y"
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>%{fullData.name}: %{y}<extra></extra>",
                  "name": "Premium",
                  "showlegend": true,
                  "type": "bar",
                  "x": [
                    "Cluster 0",
                    "Cluster 1",
                    "Cluster 2",
                    "Cluster 3"
                  ],
                  "xaxis": "x",
                  "y": {
                    "bdata": "twIEAPYBDQA=",
                    "dtype": "i2"
                  },
                  "yaxis": "y"
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>%{fullData.name}: %{y}<extra></extra>",
                  "name": "Standard",
                  "showlegend": true,
                  "type": "bar",
                  "x": [
                    "Cluster 0",
                    "Cluster 1",
                    "Cluster 2",
                    "Cluster 3"
                  ],
                  "xaxis": "x",
                  "y": {
                    "bdata": "oQHiAEoCKgI=",
                    "dtype": "i2"
                  },
                  "yaxis": "y"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Age: %{y}<extra></extra>",
                  "name": "Cluster 0",
                  "showlegend": true,
                  "type": "box",
                  "xaxis": "x2",
                  "y": {
                    "bdata": "Jx84FysyHRQoOjo2OD4uIiMpIDMzNi0hJh08GBIXGx8gFiY7HxMoGiwWHzQfPDQ1NCYjHT0SKDMZIhY7LCUZHyUvNiw5IRwlGh4gQC1BGS0rODg/FRo+GiwbIB45FR49MSIhFhwpJRcwHxsjITAmNhQdOBMxEjtBLR84GCk2GjUwNSYxFh8+Iyg/IBMXKiouIBsiIBUVPB9BMjMUNkAhHCckNBM5FyM8GCovIC4VGTQgGSQeFhQpIjcYFSAwNBUhPhkSNxMYIh1BPTUTPxglMT8WJBQSIBkuHBYuGBsVOygkIx0VKSUhICYcNSQWHSMeIRsTIjgXNh4vJCMpFSUjHS4iJSUkOx8WNDkyJDkfJyEvPjA9FRg0JDg0KB8cJBsqLiowGB8qPj01FyI9QDYdIisgPSIVMBoWJBguNj8gICo4JzQdFjIlIjUoKy4pHyIhIBobEhwxMxQmIBooQBo5HEEVKiEoPzwqOh4vGzU2NDgXLR4xGiIoMzITIxo9FhIfGhstMCc5NjgeFRs9NiYmHR0eIys3IhgpORkSJBc7GRsrQR0xPiUvJSAhIxg3EhosFTY2Hz4TJ0AXQBMwHykxJCYTEiESKh8iQCEUMTIZIxQuQEEbNBwWPSkvHiYrJBMhPhISIBs2MiQdGTEfFjUSMSYkJSciEjcgKSU+QCgZJzcwHzo+IRMpOyYtND4iJR06JRgnFzwaJBsbJzw3NB8VGSUjGSQsGTMiLiMvJSodExYWITAjJhIoITojIBwkND0cOxYmEiUqIxwVJi0oJjwbHhYWQDcjMSceHiInGRweEiArNC4bGSQ8OjAzGSQ0MiwpFxQ6IBsmNjEsJSUkJR8kIiovHxYmFBcmJDYsHSIiGC8zHCIgLiUZEzApIzQ9QTkVJDI9HEEwLi4iGT4eJCNBFiAzKBsjGiYfIB0cEzoqHSwYFxIXLCMSEykuEiNAPCgYHD44GCgoFCM8GUEcMDweFhUaLjQdIhgdOBYlGDIVJC0SKzovORc2GDIvEzsqFCsdLkAbKCwfLysgJz0XGRwaNhYmKCQ0GiAdOiY1QSMkMCghJy0gMiQaGh0xPh0nIEAYLS8VGhseICgwFSQhJxIqJBUpODcTHDUZLx4aFTwYGi8bMRMTPysdNh0bHxstFxs2EzIbLhskEishJTQUOSw1HRkXIR8yOCAgHCIVLCEUIS4iNxoTHhk9JxkhIj0kEzYvLUA1OBQuGBglGjobITAUOyonOiUuGhsZICA/HRYoFkAZMSUmHEApOBVBICEpGhwkHzk+IBQtIh0jHD0oITUZHTIVEyUiKSUcMxMdGyUhLhMeMRkeHCQbHCQzPBUfKCY/GjlBFjQcGxktEyAZORYiFDI7HSgmJTsiLhslFicVNi4mEicmKRoXJTUkPzoSLRoSPSMjOjocLCc5Hhs5Jj8eIjsSLTU+HiQeKjYmMxonGkAnGBsmGhonQCo/JRI3PzImGSggGxkcKiovGCwTHhQrFSwoLiYfHyMgGRQmIhwnISMbFRQbLhkYMzsxJhgZIw==",
                    "dtype": "i1"
                  },
                  "yaxis": "y2"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Age: %{y}<extra></extra>",
                  "name": "Cluster 1",
                  "showlegend": true,
                  "type": "box",
                  "xaxis": "x2",
                  "y": {
                    "bdata": "FRQwJzQ7KigmPSEqHDIyMjAgFSo8MDQvNCwTLSksKjAYLhQXO0AwNSISLhcTNRMbHik7P0AnPDwUOzUSOykxPDYxLD8rMD4+NzsxHT4yMj4jOUE1Nzg3FyIzPT0qOSk2Kyc5Mjo9OzEcPDw8LhUiLjk1OjY0NRk3OjQuHBUuQT4xFjgxFhY0NCM9MjwtPRUzQCoVISwvF0EtQSkWPjE0OSY1KSwzPCczKSAwMCk8PTZBNjATNzsXFUEWQRYzEjI2Mh8rMjcuFjw+Nj49FjQ/KScxLC00FTcaQSoePRUqFxYWPTMyJiszODQsOiktIzM6KzQpNCotLy4tLCosKjEUPDo3KTE/NTcYQT4dLi8+HhYpJBc8KRIZNDY/Lj81EiwVHCxBQEEqQBYuQTAUMjUVOT5BNDgfLikqPysSFjUzNBdBOjswLy0/EiI9NSs+LzgSFi4mNRMYHRwYMkExEhMSPjk5Oz07K0AUMDE5OhQuNDFBHiVBGDc5MRg+PSo0LRwpPiY7Gzs4ODgsPS4/HiMzOzE8ODQXMTwyPjI/MzgYPjA6FCgqORM+KT42QBwwGBgXGBMbLTg5Eyo5PjcWNDs8OxgrKTEoLzE4NSxAFxQ9Oh8qGCItLxM2Pz4zNzUgLjg2PEBBMjsdFzI2HC43MSw2Oxg4KjgWNRY2OzIxM0E9NDo9QRZBFEEXIjA3Kj85LkAbMhNAFzoYM0EzLDw1QCwWPBM/MCY9LzQ2Oi44MzMTPTISOhoYMTs9Mz40KTM9MCArOjI0PT4wQC08FDo+Ny4hPBwzKxckFBglPjggNRQ6QTo4ODspOTYTFjQwFzc5PTEVFzs/PR8TPzUqQDg6LCoXJy8yP0E/FBg6NkErGCYzPj8WLxMvGD04My0fPBcfFy8zNkAsLTo7OTRBMCkxMjQ1NDY0EyU2FjYsPz8qHz8yGz0XNDY+Fyk9MjkuMRItQBcpOC8wFTc9M0ErIxYtPSwqFCY1FRQqKj0bKisuQRIVKRU7MTUUMz4uOxVAPRJBMzo7Kyo/EykbNCMXGC0WIRQ3PS8qMBgWLj83O0EtNTEhGysWFjIpMz8tQDY7PS4bLCoSLhMYKjQiLiBBPzMYMT8WJy0qFhgrLD4sKS1BOjQVKD8pMiUuLxY8GC84FycdFik9NTI2MSVBFCUwLS4qKzUpNT0+ExU4NTQ8PzwaLj4VMykpOTk9MjgrFCEsOjstKyArEjI/LzYWEhkwNB0YNjIqPjJAIj40Jjo3QDMtKTVAFxI+PBQXGBo1GCgsFCMuMxIuLzQpNzwoJRdAOxctLx0ePDs3QDc9MDA1FjMjNTssKx8wPxcyPTw8OjgkNBUsEkEzQRYwPSw1PTU8LRMWKj45OxcwNC8zOSowLRgYPxI8ND4WNhQtPTgyFj4iOy8pLCM7Myw5Gio2FRRAOBUWOitANzUyEyA7LCwuJi1AEy0+KEE7Nj4TQBM5LSg1Pjk8OCssQT4TGDxBNCk3PTI7JzEuGRcpMRJAOzQgJDY1LjU0OBM=",
                    "dtype": "i1"
                  },
                  "yaxis": "y2"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Age: %{y}<extra></extra>",
                  "name": "Cluster 2",
                  "showlegend": true,
                  "type": "box",
                  "xaxis": "x2",
                  "y": {
                    "bdata": "LCccFBotNiwTFSAeLSgtLCcVQT8mGjQmExoTJyweJCU/Ph0iHBceFh8hHzEoKR8aHhUmJBQoLjo6HiMzJzolOSorOiQ1LSQ8JCc8OyAuKSAVMi0kFBskICQ+GiUvJxwXLTUsJSUbGR08Gx4mNDAuHSIgPycdHB0XIBYyMRQeIyEpJS49MRsVHzwtKC0aJyM+Jx82Gi4hIB8cJCEkGzY0MCcaG0AwKiAeJCY2HCQdHygdOSQxGSE1HiYTJicnIzw5Ki0aJTUpMxMcGR0hLDApKzAcKCYnJDYkFxkuJycjIRkgJiEWKho4KhQjHSYcHhMaITsfMBkoJyQcJCs7ICElHxYfNChBNS85JTorOS4SJTMuJRIeHiAiHxwWHSoyJyA3GRgeFSMUGyMnFBckFxUvJiQlMxs+HSgTNh48FSwlLx01KB4TIDRAKCEfLzIjNBkbNDgtMRsuJSA2JRohKiwbIjMoLyEbICM1GCUpGjomLR4mKB8aNUAwICEoNiQjHSQzHx4hIxYgGR0cIh4hHhkbKRgjOxsxHSgbOhskKBUfKkAkKDQXHSowLiAiJRk7HBoePikjGidBFxonJxs4IBY7JikZNz4oGBUlJSYgFSodJh4vGismPR0gOz5AFCQcFDIYICMpHh0aFRQyJCE1HyMmJCYiEyIiOBUiLjAqGik4FBohH0AaJCQVQBMhHy06NEEvLRsmKx8hJRYbFCEfJxQbICoyKCQ7HhYmGiAUHSYhHx8bHzY3FUASLy42KSM1NxwvMyETLBMSIiMbMSIZGjYfGzcVEkAzJxseKR85FjQVHS4mPxchFys0OB0cFCcgMSs3HiQvPh89EhRAQCU2EjIeKSEoFz8vFRgjJSwaEzg9OiYjFiYVLhovIj48EjoYPhUYHx89GSscGjwrQSAiFjkWFBggKCEkJxgwKBouKjkZMRMZJScVGzMwHyceFiwTGCcoHyEgMRgXKh0TNRQaFiUzHi8uGRwmMDkmISImJDYdGSc0JCovFRw3OkEoGyc1Eh8bJRciGRIrHhcjNjguGSscFSYnGR0WNTIvGigrGhotLSQZMxIeKCIiHBQSIi8ZHiQlHRU7Ei0iFSQTJToWGyocJiw+MSMXJi0aIj0bF0EnGBc8GCQ1LCUiPC0uHjghKjAXPB0ZEyMYJxMxNy0ZGTM8LyYjJigiKkEkLRonOCchGzIoMRoZHiUgIzI3EhQgIB05FiQoQTAgKB4aIx0aGi8lIyAqHhsdGhojGxQxISggJD0hKBQWJxYeFSYiLxI/LhkuLxowJxc5KBgmHBw3KC8UMCwlGz8iIyI4FSIjGi4bNx43NR0XHik7LxQdHyQiJismNh4eIi4fIhMXICAjLxkiLRQnIzYSIRodHBIwIChAGRQdFyAhICA6JiAiNSgbMz0TJyYwPS0gEzg8JxsfICAlHhImHT0jPi41GjEnGR0dOhk3JSIlHh0WEiksFzojMx4kLyUYEh8WGysnNSEcKSMZOyAiGhMaPCYhFCcSMyQjIiovJyMdKxIkGTMmHykeNz4UIisuGiQeEywbMCY6Fh8yGTgeFTEbGxoXGxsoIz4SKSEbIhU5GRowGT4wQRsgFCAUNCEVHDEoICgZGRcnGiAgGxYjHBkmGDAeGSAfFjIiHi0iIywjJCUhQRgUGxsVFxUeHBgwLj0iHCoeJy08PTktHhwgIR0UHzoTHj4VFigiPz8dHBwYPDkWPxkwIxYsPRQiGD8eKSMZLz4aGRcoHDAZIRsuJR4lLxg1HjUePhkhGjYaKRkaLCAiQScfJCMjISESMBkTEyksIyElMx0yIxgmJTsSHCY6GCQiGSMvJCEcPx0rGRIcJyUrNB8rLiAUJRYlFjMzLCcoMyUTGSwZGT8hHR07JiMVPxwiGTwaOUA=",
                    "dtype": "i1"
                  },
                  "yaxis": "y2"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Age: %{y}<extra></extra>",
                  "name": "Cluster 3",
                  "showlegend": true,
                  "type": "box",
                  "xaxis": "x2",
                  "y": {
                    "bdata": "EjgmOxw6MS4YKhQsOio7PC02IBc5LzIqLjYUOBIsODEtFUE+LRIsOkEaFiw8HyweMTIbOzcyOj8UOzUxMDoUNT0aFilAFjAwLjkuITwrQTI6FiUxLiU+Oy49Ky4vFCk6NCk6MCkzOy0eOBY+Ny8+QS01IRg9MysUPhI3LDw5IBY+PxM8FzMlPy81FzMYOh40Nz87Oz0tEjUkQC8sFT9ANyokOzUhOisoMzY8MBQzJyo9LC88OjQ/Ljs2FihBFywyPjFAFhIXOCEtKTcdKio6LCk2P0E8NT8rEiAtOkAiLjQ3MhZAMjY/QCo6MCMxQTEsNysqOiM3Eyc2Pio/QDQ8IzcTITw5NRY/GBY4Nx4uPCoUQDg2PjEmLyowFjUuOzc1NEAkGDE6E0A9Ij0XKS8TMz06NCw1ODs8Njs5Nyw3QBcqHy01OCgbKS0UGz4tMi0pKjg2EiU8JD1BPzM5KjcvK0E/LCcvPTgyFTE9KjYpMDsjHDwXEyA3PDg0ND48QD8rLy1AKTY+EhQzQCsZNxg6Oy81LxU1LjovEiwwNjoqKDszLTYwMxI1EzBBFi8gLxg3HS86PCs/KT0wLzYpLj0pPyU9MjE4HzonPCoUGRUaOj06OisjGjQ9NRMXMyo+PikvNigpJiAWLSkTPDstQD8pGBwXJSMrPjk5OhkwLjweMyVBGD4rQRM+GRY+PjJBGzwqGzYyGhY5EhQ1LTUVICs+NjA2KzZBQDM2QDc8Lz4sJjo5PjsvOxQ3MkAeIDo9Fx4wHTc6QT4uORodQCs2LzctKC4qEzc6KEA9Mic/QDE6OB40Hx4XOTw0O0A6NTAyNzY/HxgyQTolPSI5NzggLCgvEj42Lyo/NzlBKDkzIToXNC03Oz4WPis1Kj8rNyYcMyQcLywuMzsXQSYUPz86PCI+Kyo7Kjo7PzA0FRImEhYyLi05EiorMD8pKhM/QCM1LhRAIio7KiRAIh0zOjslJTEeLkFBNTUdPjAwLxguNDIvOxw4KiUuNSo5GBk8MzRAJjE7OTwlOysfMCkmPjgpEzkTFikoFDg0Lh0UPDInMioqFz0qNCspLEEtFRQ6NxQ0IygUMzUWPzI9OSYxQBcWLCYnKi0jQS8TNz88Nxc5KDghKiM5Ej9BMjUxMBgxNzkxQDk1Oj0zQCw5PkBAEzo1QBQcLxUxMiZBKTI3ND03MC81IDA9Phw+FxUkPTsqKz4TPSs3Mys+PD42HyowMSMmJzE1MD08IkA7F0AzJCw/KC0YQTcmOzUzNSE8Lh0eOz8WOTQnLz47FDIpOzgWKzY6FUE5NDcoKDA+NSkrIB0aLBYaEjg+O0BAHS4rQCw5PjEuIxM2FjY+KjI8MRI9IDEYQB09JDU3PCw8KxQwKDodMRMUPTcdEzY+Pz43OSc9KScvOT43PUFALRwXHjolNykvIiobOSRAFBU7KjscMzA4FiA0Mz4xKjAsLhMoORwjNzMfOD4xFT08LTUjMSktEiwrMzdAPS07MCg8Jh8pPh06NUA7Ny4+MS0WMB86MyssNTA5QDk2EjwgHDQ7MkEqKy8rMSlAOTgpPSUlOD0rPTEoKTU4IxwoKD4XPT5BGCQ6OBI/Mjg2NxYUOC8XFDg+Fj9APRQ9NRwnMj4XGzhAQTkXQDwpQT4uNDk5HjI+NxQ1Ny0wPxgWMT0vNxImQRg7LjE8Oy4vEzk8NhQ3HjtAQEEYNysUMTQ+QC08EzYtODghFyM6",
                    "dtype": "i1"
                  },
                  "yaxis": "y2"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Sessions: %{x}<br>Retained: %{y}<extra></extra>",
                  "marker": {
                    "opacity": 0.7,
                    "size": 8
                  },
                  "mode": "markers",
                  "name": "Cluster 0",
                  "type": "scatter",
                  "x": {
                    "bdata": "NTlHQlNQNkU4Yl5eQ09ZUD5dRVM/ZktPZEdKZTdDVVFOV1hOPkxgZlw8Q1w0NEdoRlM3TFRHSDc/Sj89aGI8RDk9Rjc0N0NZOmRQRmJhYk9DXlBXRGJQRUZPQ0BMUU5UR1c4RTk8PkJHOEpgSUY1N1FDWDwxNltkYTteW1dBUEZoTk9EW1NYSTJQOFQ2QjVLNDg+N1w3NkhkW1BcOUIwRF1RYUE+ZTlEaFM9OVtDOlBJXUFHQGJdOGVgXjxHNkhcSjY5T0BVQlFGPkNIVWI+VzROPTVQOzQ5aEhZWEhPYDU7SzJLT04xOlw6REI5OT08TThQWExQUzdEPE5BTD82T0s9ND01ZVs5U2ViOlk/S0JEOVcyRT9YNV5dPDcyNDBLMl5eRko0YmJOYUBDO2Y/SkFCO0g6XT47RUQ/T1s+T0BCMTZgYmA3OlVTVEtLN1hKQ0JBQ1E2RERUT0FBWTpIQmVOXTRbSDtlT0NCQmFGTjtMQ0ZMN2hTOkQ7OjtVN2FXQ2hiXkxEUGg3YlNLU15LPUoxO1FDNz9OQjRZRkRXRzZOXkk2QjVUQjdBOTlDRD4/O1tPNEhJW0ZOR05LN0tmPTZJQ1gyWWViXT49T2E2RE02ZUU2Rk9FYURQSmBJOk5KQ0BeTEA5QzJPO2ZhO1hHSjVYUDRRT0Q9YD1FPmI6PUlHOD9PNE86TEpYMk9dQjJYOUA7S09EOUlNS1s6R0dMTUg+R1A9Ol5HUD1QN0w/SmFINEE5Nmg+Nk82NkBVXkMySjkzSTtRZE5KRUNTTD47Tj80QUdGZTlHS1tDSDQ7ZGQ6Skg9ZUI1XVFKSUdgTGRLO2Q5NVs2RkheUEM5Ol08QkpCVVBPNDo+ZFRDQ0syQz1BPUNITEJBO0I9OUhMVT1LP0RGNzZFWURCXGA3NkVkXUBKREo0PlNVNThEXGZDPEZOTldOQU1mVzpgSUBiV0ZKTkpORUE6UFAyOlA1TUs8TDw7SE45TzdDOU9gSkFCP2ZJWDFHWUI6VF1XN2VJTD07UEU9TEoyNUtgQVE1OTg0ZkRPPjRQRmVPRjVKSz4zaFc8UE5TWz5oPT85VDpKQmRXTV5DQDI9NUE9R0U2TjlhS0dDUzE/PU5EVEU9SzRDUEZQZkpEYGRPNFREQ0VcRDVLNVMzOj86YkI/PFVMPk5kYUZHWzVYUEBMOU1FWT5QSz1GZFBFSGVHNkdlOVlARTs9R2ViRF5FQDtcOjc5NGJGQTU0Rz5QWUhIYjthPE5MRls4QjRUP0hYXVtXRDtNT2g5V0tZQ1dINUgyTVFDPFFGOktKNzRYV11IWVVRXFBITEZPQTddPUc2Sjs1U0syRldOOV1OUD49YkY/T2A4SFs9R0dBS0o6WGQ5aEZCRko8WDk8NzczYU1ZT1E7Tj8/SlxeQmBIQFRDR0Q3Oj9oQUxDR2ZDMjk3RExiSEMxXkllQz9ORjRAQUNOXUpbOEY5PUo/RE48S0pKUFdPRzVPOk9GYlBYTjlJYF03PDs7PWZEYTg5PEQ6SjZRSz9LUV1mNQ==",
                    "dtype": "i1"
                  },
                  "xaxis": "x3",
                  "y": {
                    "bdata
                    "dtype": "i1"
                  },
                  "yaxis": "y3"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Sessions: %{x}<br>Retained: %{y}<extra></extra>",
                  "marker": {
                    "opacity": 0.7,
                    "size": 8
                  },
                  "mode": "markers",
                  "name": "Cluster 1",
                  "type": "scatter",
                  "x": {
                    "bdata": "HREhIBYRERQgJBwaCBwkGQocHSMQCQwZIw0lDRoKCyQhJAghIAwOGAgKCBMYECQiESsUDBkXHgoQEAoXFRAfDAsaJSgSChgiDBQRGBMhCh0LJxMXLQwWFiUPHQkSIQ4gCRwYDRcWIB0PJBsUIR8IJwgICSwYLCUIKg0qDBkKCw0NEQsfJBwZKBocEBUkGRIbCBEdGwsSDCUcEiYqDxgWHBsfKB4QDB4MDxwgIBsmLBcVFgwYGCUlESAgEBoPKQoTGg4ODCgaJAwbHRwdJiwZJg4bFBQNIBAIHiQYFCoRMBQMEREQIhscDh8VGiIhFwwYDBgcDhISCQofKhYWKwghDysPFQwIIBshEBkRDRkMExQWGhMTHBQgKQwdFxgfJyYPGygQHBMqExIZFxIsECIPJh4lDB8TKBwdEwgILSwMDRofEwgdGyQZISQZIyQPKAoUEBogCxMrEAsNHCApKCkoCRoQEBEMFyILJh0UGRAdGQgRFhgLHSERCQoUGhEQGigYHAwbCBkmDRYMCwwVHBwWDAwKGhYlJRkYDx0NHhcjFiQmGCQZDCEgIhgXGx4KERAcIwsWDiobJRkJERwMJwwQKycjLB4XKgoiIQ8ODSALKBEOFSMLGhATHAojGBIiFBARGRQOIRQdGBAMCx8nGCQSIx8VFR0OJA0XEBEdFAscFREYDBMXEBgQJhkkGA8cFisWFB8NCCATEhQkFBMOCyMXGQoSGhMaKA0MHBEUEg0MDg8fIxgrDhUZEh8SEhsjDgkKFRonDSUQCgwZIB8KDBMSCgsLDA8eHAgIFicYEREbFholJBYMIh4kChwvDxogHycOICEiGBAXCCAQFyckJxgNEiQnGBYXGCIKGRcaEBkQCAooJBYOExgaFyEkFBAJCCgSIwggHBMlIhITIBANFRokIhIkDCgQCxgKCiUWHxAiIQ0PHxgUCCUbISYLGBINCiQXJRAoKw0cHQgQHxMWGh4bGw4hJxAUERoUHRgiHSUKDhQMIRsbDBolIQ4iJAoSIB8NDx0cFCgNERwSIgwYCxEKFA8LDyMMKBoKDCQUEiAbIQgcMBIkICQjCBwVGRgMIhsdMyAoGCkXCREIHB4UIxUKEBEaJAoIEwgRISUIERsQCh0QGxgSJggaJRcUFhoMIw0gEAgbHB0XCQgeFyQgHBwcGSMUGAwMIw8aEBsUDSQQIxYcICMSJhwZGQ4RCREVGCAqIy8RGCoQGhwXKhcRFhULEBQYJhAcHRoXIxYOGwgQIywkExEODxQUJQ0ZGiQMDBgLEBQoExYSJCIYFB4YFhcODA4QJB0bGSYSKQkiCw0fGwgcHRQjHiMRDyAVEggeGxkWGxgmDhoqHggYJx0eKhMVIA8ZIiQgFhEiGA0cEgwkESEUHCIbIA4mKSglDBcZGyQgCBMTKBAeDx4KGx0WCBAsISAoKxMeHikjIwwsCA0WECkOLg8oJCwZDx4aCAsSISMfIBwYDyMjEhgIFgwgGxcZJhoWFAsOJBscCgwlEx4fFiQ=",
                    "dtype": "i1"
                  },
                  "xaxis": "x3",
                  "y": {
                    "bdata
                    "dtype": "i1"
                  },
                  "yaxis": "y3"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Sessions: %{x}<br>Retained: %{y}<extra></extra>",
                  "marker": {
                    "opacity": 0.7,
                    "size": 8
                  },
                  "mode": "markers",
                  "name": "Cluster 2",
                  "type": "scatter",
                  "x": {
                    "bdata": "MBQsGhoOJSoULwoPDhYlJCgqHxgrFBQxIh8OFxATCikkHisqFCsLGxMqJC4eCBsgGxYLJw0YFxsYFRoeIRAXECohJw0XHSgtJCQTIS4UMR8pHRgKHxQlCi0XIR4NEQ4oGCwaIigjHx0kMA8rHw0xFScUGA8iGCgdNCcdKBIOHBQWJxoaJS8XLhQaJw0XCx8cCy4fKSAkGyoaLA0jGR4pECMNHBYYJBoIISEwDy0uECAPFC4sMw8VFhIeHCwgGxgoHSUhJyEWFi4WMhwhGi0jIxcYEgorJBQSKgopGhMpJhkLHhYlEB0dMyMJKBgkGRgdLiMcEhYQLxsxIy4bFCQWLA0aIDAgHCUXHQwNKhAkKBsdKhczGBIYDCQaMBMXEAwNKhMLGBMNICQPJDEhGhohJxseHiUbIyIwEhYQLQ0lGyEoDB8PGi0LCxAlGSEdGxsrHxoNEBgqHy4jExwfFg8MGhAwGRglJh0jHx8aHSkpDSYcNR0iGy4XGg4gGBosMDIgFC4MHB8ZCxsnMisrHRAbLA4eDhwSIxkqDhwOHyYNIAsuEyozFycVLRMVDRocDRQsIykZIB8eGRQPJSYWECkXEQsgJA8bHw0WECwNGzIPGA8ULQ0QDykaEBAoEiUgLg8fJRAoHBonESYnDSghDCoQGyEPMhkVDw0rGyglJBAoICsPLBASKCEqKSQLEC0dEhsuISYcDxAKIhsoHSggIBQUMSkfChguJycfHCsNLDArLTIxGB0IIi4bIywcGhEqIR4NIxQnGh8UJi4gKhMhIy4QKQkhGQowIxMjIRQRExwVKiAkHg0jIA0OKBIYJyoMDyMKDgkTDRQTFhwcIBQpKBkpKhMYGBQjFw0THxUoHBsbJSEsDC0nLSISHAsPKRwgHQgVCzAYLxIYJRMpEi8QIB8WLSMTDgoVCyETCiwqIikUFywmLRcxKgwNHB0YIzAQDg8eFBsQKgwcGiIzKB0dHygNChIwISodEhoSGBwPChIQLBQQKB8VMC4ULikfLi4SLSQlJB8LJigNIRoOHgonMhwjDCYXNAkgIg8uEwssLB8aLRMvCxAKKhggKBMgHh8aGxouKRAYECccMgstISgsJBEWJBMeESUuDCccFhgnJyASDDEgHTMaIykdJB0qGR0aLBckDCkkHSkYDiMVGB8pFgoMIxsfFR8jMAorGyQtLB8pJRUZKBkWGiwMISEMKhMhKy0eMBcuDhwLJxQoDC4ZMBscGyQvICMfDiIuFiYiLxIfISEmLBYQLQwbKxQPJSQwJyUyMhMsEigSFzImHiQSGxYjJxsaKg8LHRIcLgggJiMSHA8UJhcbLCcTIywKKR8cKhAYKBMsGx8XHyMULhAOJxsKHCkcIC0WIBAsEjAjGDAKMRAYHQsqGy8qHxsuFxgoJygeDwojHCUYHw8UChoaEg0SHR4WJgsyFxINJBolEBkoGCwXDhQLChUOICscLhcdJzIaMRosCi0MMRceJSobFxQRIA0UKycbHxchHygtDBYMJSMXKiApISEfExYRGhYNEg0cLRAQIQ4lDw8fDiENJC4dFhQMEiMpIhAYExcoHCceIxkNHBcdExskMiMiFxcbCzIOLBkbIxwlGQwQISkQEBYjLhMZCSggFBINCDAWIBAMFxMcKhMNMBAsLiglGxE1FyIjLCAcJw0LDissJiMOJRIuFxIjDCAXGyEPHCMuDg8ZFBsfHCQwDhobFygQHCoSIQ8nHSgnIwscDiUfHh0MEg4qHhUbDxMOFAolECQYDS8aMygtGywQLCAOHAwUChoUHy0aLSgbGw8XIx4RIRQdGyUdIx0TFzQkISQlDyEVKRkuJScpEBsnIBIfHSguGBgqJBsbDwwOJRgyLBQaGAgrESgWGDEdKiULDSIpGiUSIyU=",
                    "dtype": "i1"
                  },
                  "xaxis": "x3",
                  "y": {
                    "bdata
                    "dtype": "i1"
                  },
                  "yaxis": "y3"
                },
                {
                  "hovertemplate": "<b>%{fullData.name}</b><br>Sessions: %{x}<br>Retained: %{y}<extra></extra>",
                  "marker": {
                    "opacity": 0.7,
                    "size": 8
                  },
                  "mode": "markers",
                  "name": "Cluster 3",
                  "type": "scatter",
                  "x": {
                    "bdata": "Lig8JSg1UDA+PDA7SDEvQjA5LjgnPDI8NzcvMC5GKSs0MzY+TUVARz86LDQ7PjY0PisvMkM1PEBAMEQ4SkBKQDowODBBNTkmNCY8Ky04Tz03PDItQz0zNDRNNjU+LD8oMzFCNTYkJ0Q/PToyNT09OzkyODc+LzQ8L0UuMz4zPzw3JCw6PD82NDMuOCotQyhFLDU1NjQ+QD0tPD8sOEY2LDUwPTIzLjo2QDIoKic/LTVFLDMuMTBKLDMmOSopPT4yKiw6PDo9PigvPCozMTNHOjg5MkRNMz0sNC83LCc7NCszMkBAM0BAPTImLi8sOEBCPzk3PDdCPDgoMCwyIzwwKUE2PUcrQyg1PjckLzM6MD8pSidDPzM3ODY8PFAzMCo0Ny4yQzQ8MDg4MSM1PkA8RD85Tk1ANjc9OCs0PC4yMjw4MzIzPjg0NT5HLzk5Kzw4Kzg1PjBFNyVMQi1OOENEQT5GNCxAOkUyNj1FRjotMzwzQDA4OSskRlAwNSc6LzcxODw0RkEyNjc4OT01ODkzM0o5OCkwRDQ4Lio3LksrKDZMRj43Rj5LQCxJNSozMS8uJzlDNDtDNyhKODg/MiU8KUBIRDM8ODg8MCwtKzQ7LSRDQCs6PCkuSC48Oj0rTy84KT0zLSo5OSc5NCs0OzA9NDoqKS0nSCxEMzw4OjMwNjkvMD4rLDA2LDc1TzYpKzgrLD1FOzM3OzApQDcuMDowMD8rNDhGJThCNDEtKic6PigtPDc9NzwwTUc2KEhAND4/KjA1N0M1OzA4KDA4PUBJMycwOTo8MzY2O0AyKi0zQDA9PjcrNEc0UCw4ODk/SCxJJy81LFA1PDw1QkgtPC01TjIwQDM8PDFAQDwvNEk4Liw5Mjw+LDM4PDY6MEAwRiwvOFBJMj8zTTY/Oyg/PDBDQTU6NjQ1RD8vN0A2NDI4OEssODw1NSQyNDEhPjMyPDY5MUgzOzBONDk3MkpALDc1MDkwPEEuIzQ3Ky82MT42NDwsPD8tNz5DSTMvQD47MCwtNDk8RUA8NiszNEM+O0w0Pi88PDk7MDQ8NC4vMjE3LT8xOzk2NS83Ozk3SDY9MDQ2OS1NTjxELCYvQSwvNCgtNjUsKjs4UE1BPE41QDA+NDc0TToyLjAsMDkzJ0Y0Lyw/PjAwMkE/KTc0O0wxQTI+JTo+QTUqMDM/OzU1MjFKODgvJys+NS4wODgtODw/ODcpLU5LQTAxMygxPS8nNDg/LEM6OT47O0BEKD8xQEM+OjJALjgzNjw1MCovOCguQzYuMDMxPEcqI0AtLjNILTE9MTUwPT5OP0c9LDAxQiw6K0Y6JjA5Jzg4Mzo5Nig9Mz5AMDA/PzkwPi06NyY2J0ArNzA9QEA5NzYvNzE+RTM0QSc9Nkc1TTAsMDg0KDU7KDsvTiVJNDhEO0g/NC8uQC0sSyksMToqQjA8NT83OSw1PTgwOkA5Nj0/KTQwPCMsPDIsODA8JTwwNkZLOTk0PjBNOjwzQztKKDcqPzQzOTNFNjY4LzYyLjgxNC82TjkpTzw7RCU0NDAlMSo9JDQ9MDQkOCorMSswN0YtNC0yLzIrKDoxNzpGPz01OzM1MC5DNDFISTRGRiw7NS9MMjhOPS8pMC48PjQ7LjgxKjs1LD5GJjhNNDQiOT1KQC09TC8rSjw7OkAnMCwySEA/RzUtLyk4Pzc2LDE2OSguLUsuTjE0MzdINCs3PzwsPTJAOTQq",
                    "dtype": "i1"
                  },
                  "xaxis": "x3",
                  "y": {
                    "bdata
                    "dtype": "i1"
                  },
                  "yaxis": "y3"
                }
              ],
              "layout": {
                "annotations": [
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "User Clusters Distribution",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Subscription Type by Cluster",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Age Distribution by Cluster",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Engagement vs Retention by Cluster",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  }
                ],
                "height": 800,
                "template": {
                  "data": {
                    "bar": [
                      {
                        "error_x": {
                          "color": "#2a3f5f"
                        },
                        "error_y": {
                          "color": "#2a3f5f"
                        },
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "bar"
                      }
                    ],
                    "barpolar": [
                      {
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "barpolar"
                      }
                    ],
                    "carpet": [
                      {
                        "aaxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "baxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "type": "carpet"
                      }
                    ],
                    "choropleth": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "choropleth"
                      }
                    ],
                    "contour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "contour"
                      }
                    ],
                    "contourcarpet": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "contourcarpet"
                      }
                    ],
                    "heatmap": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "heatmap"
                      }
                    ],
                    "histogram": [
                      {
                        "marker": {
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "histogram"
                      }
                    ],
                    "histogram2d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2d"
                      }
                    ],
                    "histogram2dcontour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2dcontour"
                      }
                    ],
                    "mesh3d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "mesh3d"
                      }
                    ],
                    "parcoords": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "parcoords"
                      }
                    ],
                    "pie": [
                      {
                        "automargin": true,
                        "type": "pie"
                      }
                    ],
                    "scatter": [
                      {
                        "fillpattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        },
                        "type": "scatter"
                      }
                    ],
                    "scatter3d": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatter3d"
                      }
                    ],
                    "scattercarpet": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattercarpet"
                      }
                    ],
                    "scattergeo": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergeo"
                      }
                    ],
                    "scattergl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergl"
                      }
                    ],
                    "scattermap": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermap"
                      }
                    ],
                    "scattermapbox": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermapbox"
                      }
                    ],
                    "scatterpolar": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolar"
                      }
                    ],
                    "scatterpolargl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolargl"
                      }
                    ],
                    "scatterternary": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterternary"
                      }
                    ],
                    "surface": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "surface"
                      }
                    ],
                    "table": [
                      {
                        "cells": {
                          "fill": {
                            "color": "#EBF0F8"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "header": {
                          "fill": {
                            "color": "#C8D4E3"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "type": "table"
                      }
                    ]
                  },
                  "layout": {
                    "annotationdefaults": {
                      "arrowcolor": "#2a3f5f",
                      "arrowhead": 0,
                      "arrowwidth": 1
                    },
                    "autotypenumbers": "strict",
                    "coloraxis": {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      }
                    },
                    "colorscale": {
                      "diverging": [
                        [
                          0,
                          "#8e0152"
                        ],
                        [
                          0.1,
                          "#c51b7d"
                        ],
                        [
                          0.2,
                          "#de77ae"
                        ],
                        [
                          0.3,
                          "#f1b6da"
                        ],
                        [
                          0.4,
                          "#fde0ef"
                        ],
                        [
                          0.5,
                          "#f7f7f7"
                        ],
                        [
                          0.6,
                          "#e6f5d0"
                        ],
                        [
                          0.7,
                          "#b8e186"
                        ],
                        [
                          0.8,
                          "#7fbc41"
                        ],
                        [
                          0.9,
                          "#4d9221"
                        ],
                        [
                          1,
                          "#276419"
                        ]
                      ],
                      "sequential": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ],
                      "sequentialminus": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ]
                    },
                    "colorway": [
                      "#636efa",
                      "#EF553B",
                      "#00cc96",
                      "#ab63fa",
                      "#FFA15A",
                      "#19d3f3",
                      "#FF6692",
                      "#B6E880",
                      "#FF97FF",
                      "#FECB52"
                    ],
                    "font": {
                      "color": "#2a3f5f"
                    },
                    "geo": {
                      "bgcolor": "white",
                      "lakecolor": "white",
                      "landcolor": "white",
                      "showlakes": true,
                      "showland": true,
                      "subunitcolor": "#C8D4E3"
                    },
                    "hoverlabel": {
                      "align": "left"
                    },
                    "hovermode": "closest",
                    "mapbox": {
                      "style": "light"
                    },
                    "paper_bgcolor": "white",
                    "plot_bgcolor": "white",
                    "polar": {
                      "angularaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "radialaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      }
                    },
                    "scene": {
                      "xaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "yaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "zaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      }
                    },
                    "shapedefaults": {
                      "line": {
                        "color": "#2a3f5f"
                      }
                    },
                    "ternary": {
                      "aaxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "baxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "caxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      }
                    },
                    "title": {
                      "x": 0.05
                    },
                    "xaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    },
                    "yaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    }
                  }
                },
                "title": {
                  "text": "User Analytics - Demographics and Behavior"
                },
                "xaxis": {
                  "anchor": "y",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "xaxis2": {
                  "anchor": "y2",
                  "domain": [
                    0,
                    0.45
                  ]
                },
                "xaxis3": {
                  "anchor": "y3",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "yaxis": {
                  "anchor": "x",
                  "domain": [
                    0.625,
                    1
                  ]
                },
                "yaxis2": {
                  "anchor": "x2",
                  "domain": [
                    0,
                    0.375
                  ]
                },
                "yaxis3": {
                  "anchor": "x3",
                  "domain": [
                    0,
                    0.375
                  ]
                }
              }
            }
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# User Analytics Dashboard\n",
        "fig_user_analytics = make_subplots(\n",
        "    rows=2, cols=2,\n",
        "    subplot_titles=('User Clusters Distribution', 'Subscription Type by Cluster',\n",
        "                   'Age Distribution by Cluster', 'Engagement vs Retention by Cluster'),\n",
        "    specs=[[{\"type\": \"pie\"}, {\"type\": \"bar\"}],\n",
        "           [{\"type\": \"box\"}, {\"type\": \"scatter\"}]]\n",
        ")\n",
        "\n",
        "# 1. Cluster distribution pie chart\n",
        "cluster_counts = df['cluster_kmeans'].value_counts()\n",
        "fig_user_analytics.add_trace(go.Pie(\n",
        "    labels=[f'Cluster {i}' for i in cluster_counts.index],\n",
        "    values=cluster_counts.values,\n",
        "    name=\"Clusters\",\n",
        "    hovertemplate=\"<b>%{label}</b><br>Users: %{value}<br>Percentage: %{percent}<extra></extra>\"\n",
        "), row=1, col=1)\n",
        "\n",
        "# 2. Subscription type by cluster\n",
        "subscription_cluster = pd.crosstab(df['cluster_kmeans'], df['subscription_type'])\n",
        "for subscription in subscription_cluster.columns:\n",
        "    fig_user_analytics.add_trace(go.Bar(\n",
        "        x=[f'Cluster {i}' for i in subscription_cluster.index],\n",
        "        y=subscription_cluster[subscription],\n",
        "        name=subscription,\n",
        "        showlegend=True,\n",
        "        hovertemplate=\"<b>%{x}</b><br>%{fullData.name}: %{y}<extra></extra>\"\n",
        "    ), row=1, col=2)\n",
        "\n",
        "# 3. Age distribution by cluster\n",
        "for cluster in sorted(df['cluster_kmeans'].unique()):\n",
        "    cluster_data = df[df['cluster_kmeans'] == cluster]['age']\n",
        "    fig_user_analytics.add_trace(go.Box(\n",
        "        y=cluster_data,\n",
        "        name=f'Cluster {cluster}',\n",
        "        showlegend=True,\n",
        "        hovertemplate=\"<b>%{fullData.name}</b><br>Age: %{y}<extra></extra>\"\n",
        "    ), row=2, col=1)\n",
        "\n",
        "# 4. Engagement vs Retention scatter plot\n",
        "for cluster in sorted(df['cluster_kmeans'].unique()):\n",
        "    cluster_data = df[df['cluster_kmeans'] == cluster]\n",
        "    fig_user_analytics.add_trace(go.Scatter(\n",
        "        x=cluster_data['sessions_count'],\n",
        "        y=cluster_data['retained'],\n",
        "        mode='markers',\n",
        "        name=f'Cluster {cluster}',\n",
        "        marker=dict(size=8, opacity=0.7),\n",
        "        hovertemplate=\"<b>%{fullData.name}</b><br>Sessions: %{x}<br>Retained: %{y}<extra></extra>\"\n",
        "    ), row=2, col=2)\n",
        "\n",
        "fig_user_analytics.update_layout(\n",
        "    title=\"User Analytics - Demographics and Behavior\",\n",
        "    height=800,\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_user_analytics.show()\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## 3. Content Performance - Popularity and Engagement Metrics\n",
        "\n",
        "Analysis of content consumption patterns and user engagement levels.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [
        {
          "ename": "ValueError",
          "evalue": "\n    Invalid value of type 'builtins.str' received for the 'colorscale' property of scatter.marker\n        Received value: 'Set1'\n\n    The 'colorscale' property is a colorscale and may be\n    specified as:\n      - A list of colors that will be spaced evenly to create the colorscale.\n        Many predefined colorscale lists are included in the sequential, diverging,\n        and cyclical modules in the plotly.colors package.\n      - A list of 2-element lists where the first element is the\n        normalized color level value (starting at 0 and ending at 1),\n        and the second item is a valid color string.\n        (e.g. [[0, 'green'], [0.5, 'red'], [1.0, 'rgb(0, 0, 255)']])\n      - One of the following named colorscales:\n            ['aggrnyl', 'agsunset', 'algae', 'amp', 'armyrose', 'balance',\n             'blackbody', 'bluered', 'blues', 'blugrn', 'bluyl', 'brbg',\n             'brwnyl', 'bugn', 'bupu', 'burg', 'burgyl', 'cividis', 'curl',\n             'darkmint', 'deep', 'delta', 'dense', 'earth', 'edge', 'electric',\n             'emrld', 'fall', 'geyser', 'gnbu', 'gray', 'greens', 'greys',\n             'haline', 'hot', 'hsv', 'ice', 'icefire', 'inferno', 'jet',\n             'magenta', 'magma', 'matter', 'mint', 'mrybm', 'mygbm', 'oranges',\n             'orrd', 'oryel', 'oxy', 'peach', 'phase', 'picnic', 'pinkyl',\n             'piyg', 'plasma', 'plotly3', 'portland', 'prgn', 'pubu', 'pubugn',\n             'puor', 'purd', 'purp', 'purples', 'purpor', 'rainbow', 'rdbu',\n             'rdgy', 'rdpu', 'rdylbu', 'rdylgn', 'redor', 'reds', 'solar',\n             'spectral', 'speed', 'sunset', 'sunsetdark', 'teal', 'tealgrn',\n             'tealrose', 'tempo', 'temps', 'thermal', 'tropic', 'turbid',\n             'turbo', 'twilight', 'viridis', 'ylgn', 'ylgnbu', 'ylorbr',\n             'ylorrd'].\n        Appending '_r' to a named colorscale reverses it.\n",
          "output_type": "error",
          "traceback": [
            "\u001b[31m---------------------------------------------------------------------------\u001b[39m",
            "\u001b[31mValueError\u001b[39m                                Traceback (most recent call last)",
            "\u001b[36mCell\u001b[39m\u001b[36m \u001b[39m\u001b[32mIn[9]\u001b[39m\u001b[32m, line 45\u001b[39m\n\u001b[32m     29\u001b[39m fig_content.add_trace(go.Scatter(\n\u001b[32m     30\u001b[39m     x=df[\u001b[33m'\u001b[39m\u001b[33munique_content\u001b[39m\u001b[33m'\u001b[39m],\n\u001b[32m     31\u001b[39m     y=df[\u001b[33m'\u001b[39m\u001b[33msessions_count\u001b[39m\u001b[33m'\u001b[39m],\n\u001b[32m   (...)\u001b[39m\u001b[32m     41\u001b[39m     hovertemplate=\u001b[33m\"\u001b[39m\u001b[33m<b>Content Diversity vs Engagement</b><br>Unique Content: \u001b[39m\u001b[33m%\u001b[39m\u001b[38;5;132;01m{x}\u001b[39;00m\u001b[33m<br>Sessions: \u001b[39m\u001b[33m%\u001b[39m\u001b[38;5;132;01m{y}\u001b[39;00m\u001b[33m<br>Completion: \u001b[39m\u001b[33m%\u001b[39m\u001b[38;5;132;01m{marker.color:.2f}\u001b[39;00m\u001b[33m<extra></extra>\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     42\u001b[39m ), row=\u001b[32m2\u001b[39m, col=\u001b[32m1\u001b[39m)\n\u001b[32m     44\u001b[39m \u001b[38;5;66;03m# 4. Duration vs Completion correlation\u001b[39;00m\n\u001b[32m---> \u001b[39m\u001b[32m45\u001b[39m fig_content.add_trace(\u001b[43mgo\u001b[49m\u001b[43m.\u001b[49m\u001b[43mScatter\u001b[49m\u001b[43m(\u001b[49m\n\u001b[32m     46\u001b[39m \u001b[43m    \u001b[49m\u001b[43mx\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mavg_duration\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m     47\u001b[39m \u001b[43m    \u001b[49m\u001b[43my\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mavg_completion\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m \u001b[49m\u001b[43m*\u001b[49m\u001b[43m \u001b[49m\u001b[32;43m100\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     48\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmode\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mmarkers\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     49\u001b[39m \u001b[43m    \u001b[49m\u001b[43mmarker\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mdict\u001b[39;49m\u001b[43m(\u001b[49m\n\u001b[32m     50\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcolor\u001b[49m\u001b[43m=\u001b[49m\u001b[43mdf\u001b[49m\u001b[43m[\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43msubscription_numeric\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m]\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m     51\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcolorscale\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m'\u001b[39;49m\u001b[33;43mSet1\u001b[39;49m\u001b[33;43m'\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     52\u001b[39m \u001b[43m        \u001b[49m\u001b[43msize\u001b[49m\u001b[43m=\u001b[49m\u001b[32;43m8\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     53\u001b[39m \u001b[43m        \u001b[49m\u001b[43mopacity\u001b[49m\u001b[43m=\u001b[49m\u001b[32;43m0.7\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     54\u001b[39m \u001b[43m        \u001b[49m\u001b[43mcolorbar\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mdict\u001b[39;49m\u001b[43m(\u001b[49m\u001b[43mtitle\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mSubscription Level\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m)\u001b[49m\n\u001b[32m     55\u001b[39m \u001b[43m    \u001b[49m\u001b[43m)\u001b[49m\u001b[43m,\u001b[49m\n\u001b[32m     56\u001b[39m \u001b[43m    \u001b[49m\u001b[43mname\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mDuration vs Completion\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\n\u001b[32m     57\u001b[39m \u001b[43m    \u001b[49m\u001b[43mhovertemplate\u001b[49m\u001b[43m=\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43m<b>Duration vs Completion</b><br>Duration: \u001b[39;49m\u001b[33;43m%\u001b[39;49m\u001b[38;5;132;43;01m{x:.1f}\u001b[39;49;00m\u001b[33;43m min<br>Completion: \u001b[39;49m\u001b[33;43m%\u001b[39;49m\u001b[38;5;132;43;01m{y:.1f}\u001b[39;49;00m\u001b[33;43m%\u001b[39;49m\u001b[33;43m<br>Subscription: \u001b[39;49m\u001b[33;43m%\u001b[39;49m\u001b[38;5;132;43;01m{marker.color}\u001b[39;49;00m\u001b[33;43m<extra></extra>\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\n\u001b[32m     58\u001b[39m \u001b[43m)\u001b[49m, row=\u001b[32m2\u001b[39m, col=\u001b[32m2\u001b[39m)\n\u001b[32m     60\u001b[39m fig_content.update_layout(\n\u001b[32m     61\u001b[39m     title=\u001b[33m\"\u001b[39m\u001b[33mContent Performance - Popularity and Engagement Metrics\u001b[39m\u001b[33m\"\u001b[39m,\n\u001b[32m     62\u001b[39m     height=\u001b[32m800\u001b[39m,\n\u001b[32m     63\u001b[39m     template=\u001b[33m\"\u001b[39m\u001b[33mplotly_white\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m     64\u001b[39m )\n\u001b[32m     66\u001b[39m fig_content.show()\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/graph_objs/_scatter.py:2704\u001b[39m, in \u001b[36mScatter.__init__\u001b[39m\u001b[34m(self, arg, alignmentgroup, cliponaxis, connectgaps, customdata, customdatasrc, dx, dy, error_x, error_y, fill, fillcolor, fillgradient, fillpattern, groupnorm, hoverinfo, hoverinfosrc, hoverlabel, hoveron, hovertemplate, hovertemplatesrc, hovertext, hovertextsrc, ids, idssrc, legend, legendgroup, legendgrouptitle, legendrank, legendwidth, line, marker, meta, metasrc, mode, name, offsetgroup, opacity, orientation, selected, selectedpoints, showlegend, stackgaps, stackgroup, stream, text, textfont, textposition, textpositionsrc, textsrc, texttemplate, texttemplatesrc, uid, uirevision, unselected, visible, x, x0, xaxis, xcalendar, xhoverformat, xperiod, xperiod0, xperiodalignment, xsrc, y, y0, yaxis, ycalendar, yhoverformat, yperiod, yperiod0, yperiodalignment, ysrc, zorder, **kwargs)\u001b[39m\n\u001b[32m   2702\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mlegendwidth\u001b[39m\u001b[33m\"\u001b[39m, arg, legendwidth)\n\u001b[32m   2703\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mline\u001b[39m\u001b[33m\"\u001b[39m, arg, line)\n\u001b[32m-> \u001b[39m\u001b[32m2704\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_set_property\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mmarker\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43marg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mmarker\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2705\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mmeta\u001b[39m\u001b[33m\"\u001b[39m, arg, meta)\n\u001b[32m   2706\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mmetasrc\u001b[39m\u001b[33m\"\u001b[39m, arg, metasrc)\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:4403\u001b[39m, in \u001b[36mBasePlotlyType._set_property\u001b[39m\u001b[34m(self, name, arg, provided)\u001b[39m\n\u001b[32m   4397\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_set_property\u001b[39m(\u001b[38;5;28mself\u001b[39m, name, arg, provided):\n\u001b[32m   4398\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m   4399\u001b[39m \u001b[33;03m    Initialize a property of this object using the provided value\u001b[39;00m\n\u001b[32m   4400\u001b[39m \u001b[33;03m    or a value popped from the arguments dictionary. If neither\u001b[39;00m\n\u001b[32m   4401\u001b[39m \u001b[33;03m    is available, do not set the property.\u001b[39;00m\n\u001b[32m   4402\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m4403\u001b[39m     \u001b[43m_set_property_provided_value\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43marg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprovided\u001b[49m\u001b[43m)\u001b[49m\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:398\u001b[39m, in \u001b[36m_set_property_provided_value\u001b[39m\u001b[34m(obj, name, arg, provided)\u001b[39m\n\u001b[32m    396\u001b[39m val = provided \u001b[38;5;28;01mif\u001b[39;00m provided \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m val\n\u001b[32m    397\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m val \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m398\u001b[39m     \u001b[43mobj\u001b[49m\u001b[43m[\u001b[49m\u001b[43mname\u001b[49m\u001b[43m]\u001b[49m = val\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:4924\u001b[39m, in \u001b[36mBasePlotlyType.__setitem__\u001b[39m\u001b[34m(self, prop, value)\u001b[39m\n\u001b[32m   4922\u001b[39m \u001b[38;5;66;03m# ### Handle compound property ###\u001b[39;00m\n\u001b[32m   4923\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(validator, CompoundValidator):\n\u001b[32m-> \u001b[39m\u001b[32m4924\u001b[39m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_set_compound_prop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mprop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   4926\u001b[39m \u001b[38;5;66;03m# ### Handle compound array property ###\u001b[39;00m\n\u001b[32m   4927\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(validator, (CompoundArrayValidator, BaseDataValidator)):\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:5335\u001b[39m, in \u001b[36mBasePlotlyType._set_compound_prop\u001b[39m\u001b[34m(self, prop, val)\u001b[39m\n\u001b[32m   5332\u001b[39m \u001b[38;5;66;03m# Import value\u001b[39;00m\n\u001b[32m   5333\u001b[39m \u001b[38;5;66;03m# ------------\u001b[39;00m\n\u001b[32m   5334\u001b[39m validator = \u001b[38;5;28mself\u001b[39m._get_validator(prop)\n\u001b[32m-> \u001b[39m\u001b[32m5335\u001b[39m val = \u001b[43mvalidator\u001b[49m\u001b[43m.\u001b[49m\u001b[43mvalidate_coerce\u001b[49m\u001b[43m(\u001b[49m\u001b[43mval\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskip_invalid\u001b[49m\u001b[43m=\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_skip_invalid\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   5337\u001b[39m \u001b[38;5;66;03m# Save deep copies of current and new states\u001b[39;00m\n\u001b[32m   5338\u001b[39m \u001b[38;5;66;03m# ------------------------------------------\u001b[39;00m\n\u001b[32m   5339\u001b[39m curr_val = \u001b[38;5;28mself\u001b[39m._compound_props.get(prop, \u001b[38;5;28;01mNone\u001b[39;00m)\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/_plotly_utils/basevalidators.py:2425\u001b[39m, in \u001b[36mCompoundValidator.validate_coerce\u001b[39m\u001b[34m(self, v, skip_invalid, _validate)\u001b[39m\n\u001b[32m   2422\u001b[39m     v = \u001b[38;5;28mself\u001b[39m.data_class()\n\u001b[32m   2424\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(v, \u001b[38;5;28mdict\u001b[39m):\n\u001b[32m-> \u001b[39m\u001b[32m2425\u001b[39m     v = \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mdata_class\u001b[49m\u001b[43m(\u001b[49m\u001b[43mv\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mskip_invalid\u001b[49m\u001b[43m=\u001b[49m\u001b[43mskip_invalid\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43m_validate\u001b[49m\u001b[43m=\u001b[49m\u001b[43m_validate\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   2427\u001b[39m \u001b[38;5;28;01melif\u001b[39;00m \u001b[38;5;28misinstance\u001b[39m(v, \u001b[38;5;28mself\u001b[39m.data_class):\n\u001b[32m   2428\u001b[39m     \u001b[38;5;66;03m# Copy object\u001b[39;00m\n\u001b[32m   2429\u001b[39m     v = \u001b[38;5;28mself\u001b[39m.data_class(v)\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/graph_objs/scatter/_marker.py:1111\u001b[39m, in \u001b[36mMarker.__init__\u001b[39m\u001b[34m(self, arg, angle, angleref, anglesrc, autocolorscale, cauto, cmax, cmid, cmin, color, coloraxis, colorbar, colorscale, colorsrc, gradient, line, maxdisplayed, opacity, opacitysrc, reversescale, showscale, size, sizemin, sizemode, sizeref, sizesrc, standoff, standoffsrc, symbol, symbolsrc, **kwargs)\u001b[39m\n\u001b[32m   1109\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mcoloraxis\u001b[39m\u001b[33m\"\u001b[39m, arg, coloraxis)\n\u001b[32m   1110\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mcolorbar\u001b[39m\u001b[33m\"\u001b[39m, arg, colorbar)\n\u001b[32m-> \u001b[39m\u001b[32m1111\u001b[39m \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_set_property\u001b[49m\u001b[43m(\u001b[49m\u001b[33;43m\"\u001b[39;49m\u001b[33;43mcolorscale\u001b[39;49m\u001b[33;43m\"\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43marg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mcolorscale\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1112\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mcolorsrc\u001b[39m\u001b[33m\"\u001b[39m, arg, colorsrc)\n\u001b[32m   1113\u001b[39m \u001b[38;5;28mself\u001b[39m._set_property(\u001b[33m\"\u001b[39m\u001b[33mgradient\u001b[39m\u001b[33m\"\u001b[39m, arg, gradient)\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:4403\u001b[39m, in \u001b[36mBasePlotlyType._set_property\u001b[39m\u001b[34m(self, name, arg, provided)\u001b[39m\n\u001b[32m   4397\u001b[39m \u001b[38;5;28;01mdef\u001b[39;00m\u001b[38;5;250m \u001b[39m\u001b[34m_set_property\u001b[39m(\u001b[38;5;28mself\u001b[39m, name, arg, provided):\n\u001b[32m   4398\u001b[39m \u001b[38;5;250m    \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m   4399\u001b[39m \u001b[33;03m    Initialize a property of this object using the provided value\u001b[39;00m\n\u001b[32m   4400\u001b[39m \u001b[33;03m    or a value popped from the arguments dictionary. If neither\u001b[39;00m\n\u001b[32m   4401\u001b[39m \u001b[33;03m    is available, do not set the property.\u001b[39;00m\n\u001b[32m   4402\u001b[39m \u001b[33;03m    \"\"\"\u001b[39;00m\n\u001b[32m-> \u001b[39m\u001b[32m4403\u001b[39m     \u001b[43m_set_property_provided_value\u001b[49m\u001b[43m(\u001b[49m\u001b[38;5;28;43mself\u001b[39;49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mname\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43marg\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mprovided\u001b[49m\u001b[43m)\u001b[49m\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:398\u001b[39m, in \u001b[36m_set_property_provided_value\u001b[39m\u001b[34m(obj, name, arg, provided)\u001b[39m\n\u001b[32m    396\u001b[39m val = provided \u001b[38;5;28;01mif\u001b[39;00m provided \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m \u001b[38;5;28;01melse\u001b[39;00m val\n\u001b[32m    397\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m val \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m--> \u001b[39m\u001b[32m398\u001b[39m     \u001b[43mobj\u001b[49m\u001b[43m[\u001b[49m\u001b[43mname\u001b[49m\u001b[43m]\u001b[49m = val\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:4932\u001b[39m, in \u001b[36mBasePlotlyType.__setitem__\u001b[39m\u001b[34m(self, prop, value)\u001b[39m\n\u001b[32m   4928\u001b[39m         \u001b[38;5;28mself\u001b[39m._set_array_prop(prop, value)\n\u001b[32m   4930\u001b[39m     \u001b[38;5;66;03m# ### Handle simple property ###\u001b[39;00m\n\u001b[32m   4931\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m4932\u001b[39m         \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43m_set_prop\u001b[49m\u001b[43m(\u001b[49m\u001b[43mprop\u001b[49m\u001b[43m,\u001b[49m\u001b[43m \u001b[49m\u001b[43mvalue\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   4933\u001b[39m \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m   4934\u001b[39m     \u001b[38;5;66;03m# Make sure properties dict is initialized\u001b[39;00m\n\u001b[32m   4935\u001b[39m     \u001b[38;5;28mself\u001b[39m._init_props()\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:5276\u001b[39m, in \u001b[36mBasePlotlyType._set_prop\u001b[39m\u001b[34m(self, prop, val)\u001b[39m\n\u001b[32m   5274\u001b[39m         \u001b[38;5;28;01mreturn\u001b[39;00m\n\u001b[32m   5275\u001b[39m     \u001b[38;5;28;01melse\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m5276\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m err\n\u001b[32m   5278\u001b[39m \u001b[38;5;66;03m# val is None\u001b[39;00m\n\u001b[32m   5279\u001b[39m \u001b[38;5;66;03m# -----------\u001b[39;00m\n\u001b[32m   5280\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m val \u001b[38;5;129;01mis\u001b[39;00m \u001b[38;5;28;01mNone\u001b[39;00m:\n\u001b[32m   5281\u001b[39m     \u001b[38;5;66;03m# Check if we should send null update\u001b[39;00m\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/plotly/basedatatypes.py:5271\u001b[39m, in \u001b[36mBasePlotlyType._set_prop\u001b[39m\u001b[34m(self, prop, val)\u001b[39m\n\u001b[32m   5268\u001b[39m validator = \u001b[38;5;28mself\u001b[39m._get_validator(prop)\n\u001b[32m   5270\u001b[39m \u001b[38;5;28;01mtry\u001b[39;00m:\n\u001b[32m-> \u001b[39m\u001b[32m5271\u001b[39m     val = \u001b[43mvalidator\u001b[49m\u001b[43m.\u001b[49m\u001b[43mvalidate_coerce\u001b[49m\u001b[43m(\u001b[49m\u001b[43mval\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   5272\u001b[39m \u001b[38;5;28;01mexcept\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m \u001b[38;5;28;01mas\u001b[39;00m err:\n\u001b[32m   5273\u001b[39m     \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;28mself\u001b[39m._skip_invalid:\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/_plotly_utils/basevalidators.py:1636\u001b[39m, in \u001b[36mColorscaleValidator.validate_coerce\u001b[39m\u001b[34m(self, v)\u001b[39m\n\u001b[32m   1631\u001b[39m             v = [\n\u001b[32m   1632\u001b[39m                 [e[\u001b[32m0\u001b[39m], ColorValidator.perform_validate_coerce(e[\u001b[32m1\u001b[39m])] \u001b[38;5;28;01mfor\u001b[39;00m e \u001b[38;5;129;01min\u001b[39;00m v\n\u001b[32m   1633\u001b[39m             ]\n\u001b[32m   1635\u001b[39m \u001b[38;5;28;01mif\u001b[39;00m \u001b[38;5;129;01mnot\u001b[39;00m v_valid:\n\u001b[32m-> \u001b[39m\u001b[32m1636\u001b[39m     \u001b[38;5;28;43mself\u001b[39;49m\u001b[43m.\u001b[49m\u001b[43mraise_invalid_val\u001b[49m\u001b[43m(\u001b[49m\u001b[43mv\u001b[49m\u001b[43m)\u001b[49m\n\u001b[32m   1638\u001b[39m \u001b[38;5;28;01mreturn\u001b[39;00m v\n",
            "\u001b[36mFile \u001b[39m\u001b[32m~/Streaming_Portfolio/.venv/lib/python3.13/site-packages/_plotly_utils/basevalidators.py:298\u001b[39m, in \u001b[36mBaseValidator.raise_invalid_val\u001b[39m\u001b[34m(self, v, inds)\u001b[39m\n\u001b[32m    295\u001b[39m             \u001b[38;5;28;01mfor\u001b[39;00m i \u001b[38;5;129;01min\u001b[39;00m inds:\n\u001b[32m    296\u001b[39m                 name += \u001b[33m\"\u001b[39m\u001b[33m[\u001b[39m\u001b[33m\"\u001b[39m + \u001b[38;5;28mstr\u001b[39m(i) + \u001b[33m\"\u001b[39m\u001b[33m]\u001b[39m\u001b[33m\"\u001b[39m\n\u001b[32m--> \u001b[39m\u001b[32m298\u001b[39m         \u001b[38;5;28;01mraise\u001b[39;00m \u001b[38;5;167;01mValueError\u001b[39;00m(\n\u001b[32m    299\u001b[39m \u001b[38;5;250m            \u001b[39m\u001b[33;03m\"\"\"\u001b[39;00m\n\u001b[32m    300\u001b[39m \u001b[33;03m    Invalid value of type {typ} received for the '{name}' property of {pname}\u001b[39;00m\n\u001b[32m    301\u001b[39m \u001b[33;03m        Received value: {v}\u001b[39;00m\n\u001b[32m    302\u001b[39m \n\u001b[32m    303\u001b[39m \u001b[33;03m{valid_clr_desc}\"\"\"\u001b[39;00m.format(\n\u001b[32m    304\u001b[39m                 name=name,\n\u001b[32m    305\u001b[39m                 pname=\u001b[38;5;28mself\u001b[39m.parent_name,\n\u001b[32m    306\u001b[39m                 typ=type_str(v),\n\u001b[32m    307\u001b[39m                 v=\u001b[38;5;28mrepr\u001b[39m(v),\n\u001b[32m    308\u001b[39m                 valid_clr_desc=\u001b[38;5;28mself\u001b[39m.description(),\n\u001b[32m    309\u001b[39m             )\n\u001b[32m    310\u001b[39m         )\n",
            "\u001b[31mValueError\u001b[39m: \n    Invalid value of type 'builtins.str' received for the 'colorscale' property of scatter.marker\n        Received value: 'Set1'\n\n    The 'colorscale' property is a colorscale and may be\n    specified as:\n      - A list of colors that will be spaced evenly to create the colorscale.\n        Many predefined colorscale lists are included in the sequential, diverging,\n        and cyclical modules in the plotly.colors package.\n      - A list of 2-element lists where the first element is the\n        normalized color level value (starting at 0 and ending at 1),\n        and the second item is a valid color string.\n        (e.g. [[0, 'green'], [0.5, 'red'], [1.0, 'rgb(0, 0, 255)']])\n      - One of the following named colorscales:\n            ['aggrnyl', 'agsunset', 'algae', 'amp', 'armyrose', 'balance',\n             'blackbody', 'bluered', 'blues', 'blugrn', 'bluyl', 'brbg',\n             'brwnyl', 'bugn', 'bupu', 'burg', 'burgyl', 'cividis', 'curl',\n             'darkmint', 'deep', 'delta', 'dense', 'earth', 'edge', 'electric',\n             'emrld', 'fall', 'geyser', 'gnbu', 'gray', 'greens', 'greys',\n             'haline', 'hot', 'hsv', 'ice', 'icefire', 'inferno', 'jet',\n             'magenta', 'magma', 'matter', 'mint', 'mrybm', 'mygbm', 'oranges',\n             'orrd', 'oryel', 'oxy', 'peach', 'phase', 'picnic', 'pinkyl',\n             'piyg', 'plasma', 'plotly3', 'portland', 'prgn', 'pubu', 'pubugn',\n             'puor', 'purd', 'purp', 'purples', 'purpor', 'rainbow', 'rdbu',\n             'rdgy', 'rdpu', 'rdylbu', 'rdylgn', 'redor', 'reds', 'solar',\n             'spectral', 'speed', 'sunset', 'sunsetdark', 'teal', 'tealgrn',\n             'tealrose', 'tempo', 'temps', 'thermal', 'tropic', 'turbid',\n             'turbo', 'twilight', 'viridis', 'ylgn', 'ylgnbu', 'ylorbr',\n             'ylorrd'].\n        Appending '_r' to a named colorscale reverses it.\n"
          ]
        }
      ],
      "source": [
        "# Content Performance Dashboard\n",
        "fig_content = make_subplots(\n",
        "    rows=2, cols=2,\n",
        "    subplot_titles=('Sessions Distribution', 'Completion Rate by Subscription Type',\n",
        "                   'Content Diversity vs Engagement', 'Duration vs Completion Correlation'),\n",
        "    specs=[[{\"type\": \"histogram\"}, {\"type\": \"box\"}],\n",
        "           [{\"type\": \"scatter\"}, {\"type\": \"scatter\"}]]\n",
        ")\n",
        "\n",
        "# 1. Sessions distribution\n",
        "fig_content.add_trace(go.Histogram(\n",
        "    x=df['sessions_count'],\n",
        "    nbinsx=30,\n",
        "    name=\"Sessions Distribution\",\n",
        "    hovertemplate=\"<b>Sessions</b><br>Count: %{y}<br>Range: %{x}<extra></extra>\"\n",
        "), row=1, col=1)\n",
        "\n",
        "# 2. Completion rate by subscription type\n",
        "for subscription in df['subscription_type'].unique():\n",
        "    subscription_data = df[df['subscription_type'] == subscription]['avg_completion'] * 100\n",
        "    fig_content.add_trace(go.Box(\n",
        "        y=subscription_data,\n",
        "        name=subscription,\n",
        "        showlegend=True,\n",
        "        hovertemplate=\"<b>%{fullData.name}</b><br>Completion Rate: %{y:.1f}%<extra></extra>\"\n",
        "    ), row=1, col=2)\n",
        "\n",
        "# 3. Content diversity vs engagement\n",
        "fig_content.add_trace(go.Scatter(\n",
        "    x=df['unique_content'],\n",
        "    y=df['sessions_count'],\n",
        "    mode='markers',\n",
        "    marker=dict(\n",
        "        color=df['avg_completion'],\n",
        "        colorscale='Viridis',\n",
        "        size=8,\n",
        "        opacity=0.7,\n",
        "        colorbar=dict(title=\"Completion Rate\")\n",
        "    ),\n",
        "    name=\"Content Diversity vs Engagement\",\n",
        "    hovertemplate=\"<b>Content Diversity vs Engagement</b><br>Unique Content: %{x}<br>Sessions: %{y}<br>Completion: %{marker.color:.2f}<extra></extra>\"\n",
        "), row=2, col=1)\n",
        "\n",
        "# 4. Duration vs Completion correlation\n",
        "fig_content.add_trace(go.Scatter(\n",
        "    x=df['avg_duration'],\n",
        "    y=df['avg_completion'] * 100,\n",
        "    mode='markers',\n",
        "    marker=dict(\n",
        "        color=df['subscription_numeric'],\n",
        "        colorscale='Set1',\n",
        "        size=8,\n",
        "        opacity=0.7,\n",
        "        colorbar=dict(title=\"Subscription Level\")\n",
        "    ),\n",
        "    name=\"Duration vs Completion\",\n",
        "    hovertemplate=\"<b>Duration vs Completion</b><br>Duration: %{x:.1f} min<br>Completion: %{y:.1f}%<br>Subscription: %{marker.color}<extra></extra>\"\n",
        "), row=2, col=2)\n",
        "\n",
        "fig_content.update_layout(\n",
        "    title=\"Content Performance - Popularity and Engagement Metrics\",\n",
        "    height=800,\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_content.show()\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## 4. Financial Insights - Revenue and Cost Analysis\n",
        "\n",
        "Revenue analysis based on subscription types and user value segmentation.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 10,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "application/vnd.plotly.v1+json": {
              "config": {
                "plotlyServerURL": "https://plot.ly"
              },
              "data": [
                {
                  "domain": {
                    "x": [
                      0,
                      0.45
                    ],
                    "y": [
                      0.625,
                      1
                    ]
                  },
                  "hovertemplate": "<b>%{label}</b><br>Users: %{value}<br>Percentage: %{percent}<extra></extra>",
                  "labels": [
                    "Basic",
                    "Standard",
                    "Premium"
                  ],
                  "name": "Subscription Types",
                  "type": "pie",
                  "values": {
                    "bdata": "0wf3Br4E",
                    "dtype": "i2"
                  }
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>Avg Revenue Tier: %{y}<extra></extra>",
                  "name": "Avg Revenue Tier",
                  "type": "bar",
                  "x": [
                    "Cluster 0",
                    "Cluster 1",
                    "Cluster 2",
                    "Cluster 3"
                  ],
                  "xaxis": "x",
                  "y": {
                    "bdata": "j8L1KFyPBEBcj8L1KFzzP/YoXI/C9QBAMzMzMzMz9z8=",
                    "dtype": "f8"
                  },
                  "yaxis": "y"
                },
                {
                  "hovertemplate": "<b>User Value</b><br>Sessions: %{x}<br>Revenue Tier: %{y}<br>Retained: %{marker.color}<extra></extra>",
                  "marker": {
                    "color": {
                      "bdata
                      "dtype": "i1"
                    },
                    "colorbar": {
                      "title": {
                        "text": "Retained"
                      }
                    },
                    "colorscale": [
                      [
                        0,
                        "rgb(165,0,38)"
                      ],
                      [
                        0.1,
                        "rgb(215,48,39)"
                      ],
                      [
                        0.2,
                        "rgb(244,109,67)"
                      ],
                      [
                        0.3,
                        "rgb(253,174,97)"
                      ],
                      [
                        0.4,
                        "rgb(254,224,139)"
                      ],
                      [
                        0.5,
                        "rgb(255,255,191)"
                      ],
                      [
                        0.6,
                        "rgb(217,239,139)"
                      ],
                      [
                        0.7,
                        "rgb(166,217,106)"
                      ],
                      [
                        0.8,
                        "rgb(102,189,99)"
                      ],
                      [
                        0.9,
                        "rgb(26,152,80)"
                      ],
                      [
                        1,
                        "rgb(0,104,55)"
                      ]
                    ],
                    "opacity": 0.7,
                    "size": 8
                  },
                  "mode": "markers",
                  "name": "User Value Segmentation",
                  "type": "scatter",
                  "x": {
                    "bdata": "HTARFCw1Lig8GhoOISA5JSUWRyoRQihTERQ1FFAvUAo2MEUPOA4+FiU8YiAwJF47JBxIMS8aKAgqQh8YMCsUFDkcMSQZIi44HwoOXhwnQxdPPBBZEx1QIwoyPCkkNzcePisQCQxdLzAuRSpGKRRTPxkrIwsbDWZLKxNPJWQqDUdKJBoKNAsuJCEeJAgzZTYbIDdDVRsWPghRTSELTlcnRSBARw1YGE4MFz8bPg4YTBgVOhosCDQeOyEQFwoQCGBmPlwTNioYISc0ECQNPiIXPBEdK0NcNBQMGRceChAQNCsoRwoXLy0VaCQyRkMkEB8MEws1GjxTJTdMQChAMBJEIThKVC4KQBgUSjEiQAwfFDpHMEg4KTcdERgTPyFKMD89GGhiQTU8CkQKOR8UHTkmNAslPSdGCjc0LTcTFxdDIR4NJi1ZPBEOKygYLC0aIjo4KAwjTz0WZFAfHUYkN2I8MjAPFi0rH0MlYT0NYjMPNDEVHTRNTydDCRReUFcYD0RiIhgoNhJQRTUdRj4hTzQsP0MnHShAKEwSDhwzFA4xURYgCRxCJxpONRolNiQvF1QuJxhEDT8XPRRHFjogMhonNQ09HT0PF1c4RQs5OyQ5GxQhMjgfNz48PhxCLzQLLjwfRy9FOEofLggnYDM+KTMICAksPzxJNxgkLCwgRjolJAg1PDc/KhsNKho2LA0qIzQMGQpRGQseMy5DKTgQKg0tWEMjPCgNDUUcLBEWMTUYJAs1GjYIITQ2PiFbMB9kYTtAXltXQQ89LSQ8HBk/LSguECwaOEZQIEY2HA8QFWhOTxQkRCw1MC4sGVtTMxJYDxs9MjMIER0bSS4VMlALOFQWNjoSDCUcQjY1QBIyHhJLJjQoHCosDyogJz8bGDgtKBgWPjVFN1wdHBs3HzYoHhAlDB4hJywhDBYWDzMuSBZkW1AyHBwgIS4aXDE5IC0wQjAjSiwzRCMbF11RYSYmQSw+ZRcYEjkqFSk9ORYMGAoYJSskPkQyKiVoESwgUxQgPRA5OhoSWw8pChM8QzpQGg4qCilJGjpdQT0+DkcoQGIvPCozMRNdKQwzJig4GmVgGQtePCRHNkcMSFw6ODlKNhseHTJEOU9ATRwzPR0WVSVCJlFGLCwZNCYvEB0dMyMONxs+QwkoGCRIVWI+GSxXGDQdLk4jHCc9OzQrEjM1MlA7FhQQLxsxNCMUOQ1AIC5AMxBAGxQkFggsDWgaIEBIPR4kGFkwIFgcMkhPJmAUKhEwFDUuOyUMFxERL0syEB0sIhsMSw1PHA4qECQoTjE4HxUbGkAiQiEdFyo/FwwYOjkMXDMYOjdEEhg8DBhCJBw3DhpCEjkSOTA8PQkKEzwfF004OFAoMCosMiMWWBA8DBYwTCspDUE2KhMLUD1TCCFHKw83QxgrRA88Ew0oThUgNUFMPyQ+NjcPJDEkIRpPDAgvGkszPSA0ITonMD0bNR5lGx4lGz9bKSNKITknECJTGTARQ2USP2I6DRkWMzcMWT84E0sUEEI2PBZEOS08Gg0TE1clG1AcMhQhKAwfD0UzPzBYICkqNDUaNwxeLS4dFxhdPDJDHzQLJws3MjQQJiUZDxshHSgQPDA4Gxw4GzErIx8aNT4TQCoNPBNEPxI5GTBOF00SEEsyLEBeEBg2Kl5GIko0N2JiHz0uDyM4JitOExw0HxZhQDweDy4MQzI7Zho/MjwQJQwwOB8TKBwZMx0YEwglCC0yJiwzPh04SjQ1DD4NGiMfRx8vHzkTCEE5Kx0aPDgbHUIpJCk7Kw04SCYcNTUdGTpdIT4iOz5FMBtFNy4lTCQXGSNCGi1ETiQ4Qz9PWw8+Dk8oREAgGEEaQjEKPjYsRmAwNDIULEBiIDpgEBoUIAsuDBM3RRwrEAsyHw0ZNgscPSAbJykoMik6RUY6VSgtCStTKzM8VB0QMxpAEEswSxs3WEosQzhCDkFDOSseUTZERBAOJBxUEU9BQVkSIxkMOioOSEYXHEIOUDA1J2VOOl0vHyI0Jg1bSCA7N2ULMSZPHUMLQjg8LhNCNEZBYRQyRjZONyo7MxcnFUxDLRM4FTkZRkw3EB09NTgNGQg5ERoWaBhTHDM6DTNKRBQLHSwjOzohOzk4EQkpKTAZRDQgVTc4LgoUGhEqNx8eLhkQFGEPS1clGigrGCg2JhwWEEwpRhcRDAsgGyQPCBs+Q2g3GUY+H0sNYiYWQA1eLExESRYQNQwqMywxCwwNLxUuJzlQQzQbMmgcDzs3GA9iU0NLUxxeFBZLPQw3LQ0oEEoMSjgxDyk4PzIKGhAaJRYlPCUQOygZGFEpEkBDJUgPRDc/Mzw4IC5OQh0NOA88Hh8XIzA0JRAoFiwtWSs0O0YtJCQcQxpAJyYrETpEPCYpLkguPDoYJz0rDVckKBlHTyE2TgwMIS8qEDgpIBsiGF4hSRcbNg89MkIzHi0KKjURGRA5HBUjOQ9UCw0rG0I3KEE5OSUkQxAWDigqG0QlICcZCRErDzksNCscDBAnPj80O1s7Ek8wKDRIPTQMOkkqEFtGKSFORy1OJyopSCRLCzcQKy0sS2ZEHRI9GzYuSUNYMyE8JhwPMlllJzhiOiMzECwwNjkKXSI+Gx4oLxcwPisdLCg9TyowYTYgRE0gNhQKZSI2FCEPMUUsNzUpHwo2Rk8YLjZPDg0pICsnJ0ULOGEfHERQKysoDSxKPREsYEkOOhUwRU5KQystQDszXjcjO0wLMkAxGB05CCIwKS5DGkAbECMyExwsHDdPGhE7KmYuMCEeYToKDTsjWDAwPyMYKxQnGh8UJi4SIhQgEBE0OEcZFA5KKiE1FB1GGFglEyE4UEIjNC4QEAw0UQtPMS0pH0QqCT0nGCQhJxk6PgowKGASLTw9N0UjIxMjPiEUHxURFRMdYj0OOjckHDw9DTBNFSpHNkkXRyA4KEgkP0A0TxA+NBEdHhRPOkwNPyMgC0oNHA4oFSoSWBEyMDU3TxgnQxgqNQwTOwxdDyMXEDAYOEIKEA4JJjIoMDgTGVgNFCQ5E0A7PRYcS0BPGA9JHBYzHCAURCcrORYwFCkfOTo8KA1JCCAzNhlNSxNbKTY7EhRAKhMyGCQYFCM6R0dMFBMqDk0LFy0zQDANSD0jPj43R1AXGT06Eys0XkdHUAo0UCw4HzgVOT0oUDcSPxpILBNMHBpJKD9KYRsnL0gNNRssJSEMHFA1NEERLAwtJzw8FC0iEjk1EhwNQjYLD0gtPAwOLTUpaA9OHCAyHT4wHyMYNk8rDkAIFTM8FTY2QDwLVV5DMjAxSjlAGEAZLxIYPCUTMy8SHylJOxI0Ei8SEFEbIElkH05KIw4WCThFLkNTLEwKLTkjMj47PBVOGj4nLD80DRMzDkFHJTg8NhAKChULDBk6ISAwQEYwH0YKEwwTZTkKLCwSCkcLKksvWyJDKUgUFws4UEk0O2QsDA9kOkpIMh4cCCY9ZQhCFic/MxgtERFNFxsxKgwWGg0cJR0kNj8WGCMwEDU7KF0OPzwwQw9BDB5RNToUGyIeECQqDApKSRwaNkciHGBMLzQ1MygdZB1EHz8vSygPOxo3QCBkHzk1DTY0CicOWyA2EjBGIUheISIyUBgqQx0QEjk4ODoXGl08EhhLQkpCHA8KEiwIVVAQTyAsEBc4PBQ1NSckJCcyNDQxGCE+DRIQKDozHz4yFWRUJDAnPBg2LhQWQzlDMS5IMxc7KR8YME4uNDlLMjdDLhIiLT0yQT1KJEBDChkXLCUkSB83CzVMGhAZJjAQQghBKDs5CjAoDTxCQS4jIRo9OTQ3DiQeCidIKzIWHExVIw4vExg2PQxLJhcxGj9EFz40NiFGNAkkNzw2FEVZLBBEQiAJPFxgIj83LTY3RQ8+LhNDC2QsXQgoSSwSMy8fGi0TQCMvCD4LIDscEDBALEpEChMtKiU0IhITIBBKOTwYNEU+UyBAVTw2KzUzNCgTQyA+OA07FUxEGiQiHjQfPhIkDCgQLxobPBouXGYpQxALGDwYPAoKJRA5Jxw7RhYfEDILIjAtISgsJDQRPCE0LhYkEy8NHhElMg8uHzEYTjcMThRXLSc/MU47QRxNCGZXJRYYGyEnJyASOToMMWBJNiAdJgs1MxojL0BiKR1XJDcdKhlGO0pOHRg5GhINLDcKFyQXSCQlDBApKCQ2Kw0cPR0IHUowECkYTjQ2Hw5FEzlBIxUtFhoYHykeFjpNTjxQCgwjUBtEMiwmL0EbLBs6LzRQHygONRVNLSEnSxA8HxQ2I0w8O0gwChFOGis1OU8UHTcYLCo7IkMbOFAdJU1BCg4UDCQtLDkhT2A8ThtKQTUfKSUVG0IZQDAMGig+PxkWNCUaLCEONyJmDEkhITRYDCQxR00qE1lCITpUOgoSKzJdLS4eMDAXIFc3HywuZQ0OHA8LJ0lMMBQdOT0zOygcDC4UJxlQRkU0KD0vLDANEUwbHD8cG0oSPiQiDBgwMjALMkERNS9LYEEgUT81ChQpOQ8LIzcPHzg0NGYjRAwOKDtPIj40TC4xQTI+JRZQJiJGL2U6Eh9PPkYhQTUhGiomCgwkNUowMxQSPzs1NSAsFhBLGyEyLT4MMxsIaCsUHA8xJVcwSjg4EiQwJzxQLyclKz41LjIyMCROUyBbJD5oIwgTLDgSKD04HBI/OS04VDo8F0pCMiYVHhkYJD84ZAw3KS0iGxIbV00WTl4jQ0BLJzIdGz0aKjUPCzNBICgwGB0SHC4IMUE9M0dFKTYoTjE5Fz1hIC8nS0c0JiMJEUNTCBI4HA8UHCYXHhQxPxs/LCwnPRMjFU4jRCwKCilDHzo5VBARPhpFJBwKCCo7EzsQCBFAGCgTPSwbS0QhJQgRNB8bKBcfECM/MQoUQENDPi4dOjIQEBtQQEYuODMOUGYnNhgSJjxKNQgbRGAKZBpPMDQqHFQvRClDHDglRSAtFygULhZDNi5cRBowFgwgNRAsEiMzMA0jMSAYMDxLCjEQEDUIG0cYHFMqI0AzHQsqHRcbOi8tLjMJSD8tOioxPQgeH2IXMSQgGy5CHDUcFxgcPygnKBkeMDwjDxQKIxhVTD0+Pk4cP0cMDCM9JSxOGDAxDxpkYUYfRw8QW0IsGzVYUDorFBRGQDoKDSQaECYjGhJMORZNRVk+HCAjMA05EicdOB44FjM6EjlQNiYcSygZPUYZPQ4RZAkmCxEyF1AVMxg+IEAwRUgSZTBHNg0kPxpHKiM/LyURORgqMGU5ED5ZLRBAOkUZKDsaGD1HHGUsYkQXF14ONyomRUA2FBcRFgsVOwoLJxVcEDoOICscNy5AKzc5NGIUMD1AFxgdJyYQMhoxGiwKLQwxF0AeOTdGHB0lGiobFzYUFyMvESA3MT5BDRY1RRQ0RysnDhszHzQXQSEbCBAnPR8+IygsLVAMFgw2RyQ1TRMRJTAsDg9ZIxcqFDAgOCk0SChIYiEhHzsUNSUNYTwZOxNOGiQWKExGO1sMOBFCGhYvDU4SDA00GFQcCy0/JRAQECFIFA5YJSgPXQ8fW0kTNDhEDhY7IUhXDSQuRD8SNC8dLjtAJCIYLRQsTUtPKRZoOVceGCwUSxYXDBIOIzE6KSpCIlkMEEMYMFcTPBdINQ4/NygcJzk1HkgsIxk1DTIQHBc9TVE4MEMkPDodQBMdGxtRGUYkOjkyNks9SiM3JjQ/KRIiNCkwPCMJF1hXIgsNHxddGywbSAgLMhw8HTJZDiwZVRsjFCwcOFEwJRkMIzwlEDxcMDZQIUYpS0gQTEY5HiMQEQ85IE8VFjRBPiMuMDcTTRldCSg9OkcSNjwzQ0ogFAg7HjUSGw07GUoIKDdTSzJGMBYqGz8YNFcmFiAQDBcOThMzOTldThxQM0UqNhM+Ng04MBAaLCoeLy42Mi4oJRs4EQg9MTQ1GCcvYhcdIjZGIyweIE45KT8qTxNgHCcVTw0LDissODwmI0hbPQ4gOyVERxIPLiVHFxkiJDQSIBZBESMiNEswDEogGDolMSpYDRxkPRIXJDk0DGhGQhskET1GISEPSjA8NCQ4WDkUHCM8KjcuDg8cKzczYRkUIhtNG1kgDjEfHE8rMCQ3MEYtJjQOURopOy0bMk4vFzIoPysQHD8oKiglEiEPSgxcXjpCF2AnSEAdKDFUNzonRkNHRDc6Pz0ZGyMLJBwgDj8laB8IHjUdQQxMQzsSDkczNSpmMB5DFS5DGzQPEzEySDkON0RJFExiNBNGRgosOyVINRAvJBNMQxgxMg1eSWU4Q04/Ti9GKBAePS8pMC4aNA8zKEBBQy0bPD4eTgo0XSxKWxs7OBBGOSwuODE9HSoWOwgQNSxKID8sDhw+DCEURE4gCkYoJjxLK0oaFDgfTS0aLRM0NB4eKSMoGyNKGw9QDCxXIhc5Iz1PR0oIDUAeNREhFC0dTz0WGxAlKTpMHU8vKw4uI0YdE2JQWEoXTg8oJDQ5LCQZPDshDx46SSQaJQhgDyFdFSkLQCcwLDISGUghNzw7Oy4jQCUnPT8fKRAbJ0cgZhI1Hy1EHWEgHC8YKSgPOC44GD8jIzcYKjYsJBI5GzE8GAgWGzYPDAwOOSguLUsgGyUYMiwUFxoYLhkITisxESgmFhoYNEQxFhQdOjMqN0o2SDQlCys3PzxRSwssDg0iJD8bHCkKGiUMPUslEzJREh4jH0BdOWYWNCokJTU=",
                    "dtype": "i1"
                  },
                  "xaxis": "x2",
                  "y": {
                    "bdata": "AQICAgECAQIBAgMCAQECAgIBAwIBAgEDAgMCAQICAgIBAQIDAgIBAgIBAwEBAwMCAQECAQICAQEDAgIDAQIDAgEBAwEBAgECAwEDAwEBAwIDAQMDAgEDAQECAQMDAgICAgICAQEDAgIBAgMCAQEDAwECAQEDAQMCAgECAQMCAgMDAQEBAQECAQEBAQEBAwIDAwMDAwMCAgEDAgECAgMDAgIBAgMDAwMBAwEDAgEBAwMBAQEBAQECAQICAgECAQMDAQMBAQIBAgMBAQECAQECAgEDAQMDAgIBAQEBAgEBAwEBAwIBAQMBAwEBAgIBAQEBAgIBAQEDAQMDAgEBAgECAwECAwICAQEBAgMBAQICAgIDAQMBAwMCAQECAgECAQMDAwMDAgICAQIBAgIBAgMCAQEBAwEDAQMDAQIBAQMCAwEDAgEDAQEDAQIDAwIDAgMBAgEBAgECAwIBAgMDAQMBAQEDAQIBAgIBAwECAwECAQMBAgICAgMDAQIDAwMCAwIDAgEDAQEDAgEDAwIBAgEBAQIDAgMCAgMCAQEBAwICAwMBAQECAgICAQIDAQICAwMDAgECAgEBAQMCAgIBAgIBAQMBAQEBAwMCAgIDAgECAQEBAQEBAgECAQMCAQECAQECAwICAQICAgEBAwIBAQEBAQEBAQECAgECAQEDAwIBAwEDAQMBAQIBAQIBAQMBAQEBAQEDAgECAQEDAwEDAQEBAwICAgEBAQICAQEDAwEDAgEBAgIBAgECAgIDAwEDAwMBAwMDAwMCAQECAQECAwEBAQEBAQIDAgMBAgIBAQMDAgMBAgECAQMDAQMDAgEDAgECAQEBAgEBAgICAgMCAQMDAwIBAQEBAwECAQICAQIDAgIBAwEDAgIBAQEDAgEBAwECAwECAgMDAQEDAQMBAQEDAQECAQICAQMDAQIDAwMDAwMDAQMCAgICAwEDAQMBAwMDAgICAgMBAgMDAwEBAwEDAwIBAwIBAgECAgEBAgEBAQICAQIBAgIDAgEBAwMBAwEBAgEDAwEBAQEBAgMCAQECAQICAwEDAgECAgIBAgMCAQIBAgMDAgEBAQECAQMDAQIDAgECAwIBAwMCAgIDAgEBAQECAwMCAgEBAgEBAwMDAQMDAgECAQEBAwECAgIBAgEDAwEDAQMCAwMDAQEDAwMBAwICAQECAQECAwEDAQIBAgEDAQIDAwIBAwMBAQMCAgECAgMDAQEDAwMDAwICAwICAQMDAgMDAgICAgMCAQEBAQIBAwMBAgECAQIDAQIBAQECAgMDAQIDAgMCAwICAQICAQECAgEBAQECAwEBAgEBAwEBAgEDAwEBAQEDAwEBAQICAQMBAgICAgEBAwICAwICAQICAQEBAgIBAwIBAQEBAgEBAwIBAQMBAgEDAQECAQECAgMBAwIBAQECAwIBAQMCAwMBAgECAgMBAwMCAQEBAgMBAwICAwEDAQICAgEDAQICAgEDAgECAQICAQEDAQMBAgMCAQMCAQIDAQEBAwMBAQIBAgIDAQEDAwMBAQMCAQMBAgIBAwECAwEBAwIBAwEDAQECAgIBAQEDAwICAQEDAgECAgEBAQICAwICAQICAQECAwEBAQEBAgEBAgEBAgIDAgEBAgECAQECAgEBAQICAgICAgMDAQIDAQIDAwMCAgIDAgMDAwIDAQMBAQICAQECAwMDAQEBAgICAwEDAwECAQECAQICAgEBAQECAQEBAQEBAQECAQEBAQIBAwEBAQIBAgICAgMBAgIBAQMBAQEDAgEBAwIDAQIDAgMCAgICAgICAgIDAQIBAwECAQMCAQMCAgECAQECAgECAgEBAgMDAwIBAgMBAgIBAwIDAwIBAgMBAgMDAQEBAQEDAwIDAgEDAQECAgECAgEBAQEDAwECAgIBAgECAgEBAQEBAgIBAwEBAQIDAQICAwMCAQIBAQIBAgEDAwIDAwECAwICAQECAwMDAgEDAgMDAgMCAwMCAwIBAgICAwIBAQICAgECAgMDAQMBAgECAgEDAwMDAQMCAQEDAQICAwEBAwICAQICAwEDAwECAQIDAgIDAgIDAwIBAgECAgMDAQEBAQEBAQECAgEBAwEDAwEDAwICAwEBAQMDAgIBAgIBAQEBAgICAgIDAwMCAQIBAgICAgECAQEBAgMDAgMCAQECAgECAQEDAwIDAgICAQICAQIDAQIBAwMCAgIBAwICAwEDAQIDAgMDAgEBAQECAQICAQECAQICAQIDAgEDAwMBAgEDAwEDAwIDAwEDAwEDAgIBAQMCAQIBAgECAwIBAQIBAgICAgEBAQECAgMBAgMCAwEDAgIBAgICAgEBAgMCAwIBAgIBAgMBAQEBAQEDAgEBAwEBAQIBAQIBAgEBAgEBAQEDAQIBAgIBAgEBAgECAQMBAQECAgMDAgEBAQIDAwEBAQIBAgMDAgEBAwEBAgMBAQEBAQMBAgIBAQIBAQMDAQMBAgICAgMDAwMBAwIBAQMBAQIBAgEBAQIBAwEBAgIBAQMBAgMBAwMBAgICAwEDAQIBAQICAgMDAQEDAwECAgMDAgIDAQICAQIBAgMCAwIDAwIDAgMDAQIBAgECAwMDAQEDAQEBAwEBAQECAwECAwECAQEBAQEDAQECAgEBAwEBAgIBAwIBAwEBAQECAgIBAQICAgECAwICAgIDAQECAQEBAgIBAQMCAgMCAQEBAQEDAQECAwICAQEDAgMDAwEBAgEBAwEBAQICAQECAgIDAQIBAgMDAgICAQMCAQEDAwIDAwIDAwMBAQIBAwIBAwMCAwEBAQMBAgEDAwICAgEBAQIBAQEBAgIBAQICAwICAgECAQMCAwMBAwIBAQMDAgEDAwECAgICAQMBAQIBAgECAgECAQECAQMCAgECAQIBAgEBAwMCAQEBAgEBAwIBAQEBAwEDAQECAgECAQIBAgIBAQIBAwICAwEBAgECAgECAwMDAQECAQICAQMDAgEBAwEDAQIBAwECAgEDAQEBAgIDAwICAQEBAQMCAgIBAQMBAgECAQMDAQEDAwICAQICAgIDAgICAwIBAgMDAgIBAwECAQIBAQEBAQECAQEBAwICAwEDAQIBAgEBAwMBAQEBAwIDAgIDAQECAQICAgIBAgECAgIBAgEBAgMBAQMDAwECAwICAgECAgIBAQECAQIBAgECAQICAQEDAgICAQECAwIBAQMBAQMBAwMBAQIBAgMBAwIDAwEBAQIBAwIBAQEBAgMCAwIBAQEBAQIDAwICAgIBAwICAQEBAgMBAQEBAQIBAgMDAgEBAwMDAwMBAgIBAgEBAgMBAQECAgECAgMCAgIBAQIBAgMCAwIDAgMDAQICAQECAgMDAQMCAwEDAgMDAgEDAQEBAQMCAQMCAQIDAQEBAgECAQICAQEBAgEBAQIBAQIBAgEBAwMCAQEBAgICAgIBAwIDAwMDAgEBAgICAgMDAQEDAgMCAQEBAQICAwECAQECAgEBAgECAgEDAgIBAgIBAQMBAQICAwMDAQMBAgMCAgEBAwICAQIDAQEBAQEBAwECAgEDAgIDAgICAQMDAQECAgMCAwECAwECAwEBAwEBAQEDAgMCAwEBAgEBAwECAwMDAgMDAgICAwEBAwIBAgICAgIBAwMCAQECAgICAwICAwEBAwIBAwECAQICAQICAQECAQEBAQIBAQIBAgEDAQIBAwIBAgMDAQICAQICAwIBAwECAQMCAQEBAgMBAQIDAQECAgICAgMBAgMDAgICAQEDAQIBAQEBAwIBAgEDAQEBAQICAgECAwMBAQIBAgIDAgECAgIDAgECAgECAQIDAQIBAgMDAQECAQIBAwEDAgMCAgMDAgEBAQEDAQEBAgEDAQIDAQECAwIBAQMDAgECAgICAgIBAwECAQMDAwEBAgEBAQICAwMBAgIBAQICAQIBAQECAQMCAgECAwEBAQECAQICAQECAgIBAwEBAwECAgEBAQMBAgEBAQEBAQIDAQEBAQEDAQEBAQEDAQECAQECAwMDAwIBAQEDAgEBAQMCAgECAwIBAgICAgECAgMDAQECAQEBAQIBAgECAgIDAQICAgIBAwICAwEDAQMCAgICAgECAQMDAQIDAQEDAgMCAgMCAwMCAQMDAQICAgIDAgIDAwMDAwIDAgIDAQMDAgECAgEBAwECAwECAgMBAgECAgEBAQIBAQIBAgMBAQECAgEBAQICAQECAwICAQECAwECAwECAgECAgIDAwECAwEBAQICAgEDAQEDAwECAwICAQEBAwECAQEBAwMCAQMDAgECAgECAgMBAgIBAQIBAgMDAQIBAQICAQEBAQEDAgMCAgMCAgECAwEBAgMCAQICAQECAQMBAwECAQECAQEBAQEDAgIBAgIDAgEDAwIDAgMCAwMDAgEBAgIDAwICAgIDAgMDAgIDAwEDAwECAwICAQEBAgMBAgEBAQMBAgICAgIBAQICAQIBAQMCAQIBAQMBAgMBAQECAwIBAQIBAwICAwMBAwEDAQEDAgEBAwIBAgIBAwMBAwIBAQECAQEDAgIBAgIBAgMDAgIDAgMBAgMCAgIDAgEDAQICAgIBAgIBAQECAQECAgECAwIDAQECAgICAgMBAwIBAgICAwMBAgECAQIDAwECAQICAQEBAQMCAQEDAwEDAQEDAQECAwICAgMCAQMCAwICAwEBAQICAwICAQIBAgECAwECAgIBAQMBAwICAgMDAgICAwEBAwMBAQICAgECAQEBAQICAgIBAgIDAQMCAQICAgIDAQEDAwEBAwMBAgMBAQIDAQEBAgEDAQICAQEDAgIDAgEDAQMBAgMCAgIBAgECAgEBAwECAQECAQECAQEBAQECAQECAwIDAgIDAwICAQECAwMBAQICAQIBAQECAQICAgEBAgEBAQECAQMBAgECAwMDAgEBAQECAQEBAgMBAwICAQMBAwMBAwMCAgEBAgEDAQECAQECAQEDAgEBAgEBAgECAgEBAgICAgECAgECAgIDAQMBAQIDAgMBAgICAwIDAQICAwIBAQEBAgIBAQMCAgECAwMCAQEBAQIDAgICAgMBAwECAwIBAQIBAgICAwEDAgECAwIDAgIBAQECAgECAQEBAQIDAwIDAwMBAwIBAQMDAwEBAwECAgIBAQIBAgEBAwMCAwICAgMCAgIBAgMCAwEBAQICAwEBAgECAgEBAwIBAwIBAQEBAwEBAgEBAgIBAQIBAQIBAgIDAwEDAwMCAQIDAQEBAQMBAgEBAQMBAQEDAQMCAgIBAQMCAwMDAQMCAwMBAgMDAQECAgIBAQEBAQEBAwEBAQIDAQMDAwICAwIBAQEDAgMBAgEBAwEDAwECAQMCAgIBAgIDAgECAgICAQEDAgIBAQEBAQECAQMBAgEDAwEDAgIDAwIDAgECAgEDAgIBAQMCAQMDAgMBAgIBAgECAgECAgECAQEBAQEDAwICAQICAQICAgECAwICAgMBAQEBAwIBAgIDAQEDAQICAQMCAQEDAQIBAwICAgIDAQMDAQIBAgMCAwMDAQMDAQECAwMCAwIBAQECAgEBAQIDAwIDAwEBAQEDAQMBAQEBAgEBAgICAQIDAgMBAQECAwEBAQMBAwEBAQECAgMBAgIDAQMBAQEDAQIBAgEBAwICAgIBAgICAgIBAgMBAgMCAgIBAgEDAgMCAQIDAQIDAgECAgIBAgMCAQMBAwECAQEBAQIBAgMDAQEBAQMDAQECAgECAQEBAQIDAwMCAwICAQEDAQMCAwICAQIBAwEDAQECAQIDAgIDAwMBAQEBAQECAQIBAgIDAgMBAgECAgEDAQMCAQIBAwECAgICAwECAQMDAQMBAgIBAQEDAwICAgECAQIBAQMBAQIDAgIBAwICAgIDAwEDAQICAQMDAgIBAgMCAQECAQMCAgEDAwMBAgEDAQECAQECAwIBAQICAgECAgICAgMBAgEDAgMBAgMBAwIDAgEBAwMDAwIBAQICAwMBAwIDAwEBAQECAQIDAQECAQIBAQIBAgMBAQIDAgEDAQEDAQICAQMCAgEBAQECAgECAgECAQIBAwIBAwIBAwMCAgICAQICAwECAQICAwMBAgMCAwIBAQEBAgIBAQEDAwMBAwEDAQMCAwEBAwICAgIBAgEBAgIDAgEDAwEDAQMCAgICAwEDAQEDAgMDAgMDAQIBAQMCAQEBAwMDAwMBAQICAgIDAgEDAwIBAQEDAQICAQECAwIBAQIDAgMDAwICAgMDAQECAgICAQMCAQMCAgECAwEDAgMDAgMBAwIDAwICAQIBAgICAQECAgEBAgIDAgIDAQIBAwEBAwECAwECAgEDAgMBAQECAgICAgEBAgEDAQICAgMBAgEBAwMBAQIBAgIDAQMDAQICAgIBAwEBAQIBAQEBAwECAwMDAQEDAgMBAgIDAgIBAgECAwICAQIDAwECAQECAQMCAgMCAQEBAwMDAgMCAwIDAgIBAQECAQMBAQEDAgEBAgEBAgEDAgEDAgIBAQIBAQICAQICAwIDAgMBAQIBAgIBAwICAQIBAwECAgEDAwMCAQEBAQIBAQMCAgEBAQICAgECAwIDAwICAQECAgICAQIDAQEBAgIBAQICAgMCAQMBAQIBAgEBAgMBAgEDAQMBAQEDAwICAQIBAgEDAgICAQEDAwEBAQICAQMBAQEBAwMCAQMBAQEDAQEDAQEDAQMCAQEBAwI=",
                    "dtype": "i1"
                  },
                  "yaxis": "y2"
                },
                {
                  "customdata": {
                    "bdata": "CACAEw==",
                    "dtype": "i2"
                  },
                  "hovertemplate": "<b>%{x}</b><br>Avg Revenue Tier: %{y}<br>Users: %{customdata}<extra></extra>",
                  "marker": {
                    "color": [
                      "red",
                      "green"
                    ]
                  },
                  "name": "Avg Revenue by Retention",
                  "type": "bar",
                  "x": [
                    "Not Retained",
                    "Retained"
                  ],
                  "xaxis": "x3",
                  "y": {
                    "bdata": "AAAAAAAA8D9xPQrXo3D9Pw==",
                    "dtype": "f8"
                  },
                  "yaxis": "y3"
                }
              ],
              "layout": {
                "annotations": [
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Subscription Type Distribution",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Revenue by User Cluster",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "User Value Segmentation",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Retention Impact on Revenue",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  }
                ],
                "height": 800,
                "template": {
                  "data": {
                    "bar": [
                      {
                        "error_x": {
                          "color": "#2a3f5f"
                        },
                        "error_y": {
                          "color": "#2a3f5f"
                        },
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "bar"
                      }
                    ],
                    "barpolar": [
                      {
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "barpolar"
                      }
                    ],
                    "carpet": [
                      {
                        "aaxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "baxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "type": "carpet"
                      }
                    ],
                    "choropleth": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "choropleth"
                      }
                    ],
                    "contour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "contour"
                      }
                    ],
                    "contourcarpet": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "contourcarpet"
                      }
                    ],
                    "heatmap": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "heatmap"
                      }
                    ],
                    "histogram": [
                      {
                        "marker": {
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "histogram"
                      }
                    ],
                    "histogram2d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2d"
                      }
                    ],
                    "histogram2dcontour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2dcontour"
                      }
                    ],
                    "mesh3d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "mesh3d"
                      }
                    ],
                    "parcoords": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "parcoords"
                      }
                    ],
                    "pie": [
                      {
                        "automargin": true,
                        "type": "pie"
                      }
                    ],
                    "scatter": [
                      {
                        "fillpattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        },
                        "type": "scatter"
                      }
                    ],
                    "scatter3d": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatter3d"
                      }
                    ],
                    "scattercarpet": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattercarpet"
                      }
                    ],
                    "scattergeo": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergeo"
                      }
                    ],
                    "scattergl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergl"
                      }
                    ],
                    "scattermap": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermap"
                      }
                    ],
                    "scattermapbox": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermapbox"
                      }
                    ],
                    "scatterpolar": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolar"
                      }
                    ],
                    "scatterpolargl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolargl"
                      }
                    ],
                    "scatterternary": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterternary"
                      }
                    ],
                    "surface": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "surface"
                      }
                    ],
                    "table": [
                      {
                        "cells": {
                          "fill": {
                            "color": "#EBF0F8"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "header": {
                          "fill": {
                            "color": "#C8D4E3"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "type": "table"
                      }
                    ]
                  },
                  "layout": {
                    "annotationdefaults": {
                      "arrowcolor": "#2a3f5f",
                      "arrowhead": 0,
                      "arrowwidth": 1
                    },
                    "autotypenumbers": "strict",
                    "coloraxis": {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      }
                    },
                    "colorscale": {
                      "diverging": [
                        [
                          0,
                          "#8e0152"
                        ],
                        [
                          0.1,
                          "#c51b7d"
                        ],
                        [
                          0.2,
                          "#de77ae"
                        ],
                        [
                          0.3,
                          "#f1b6da"
                        ],
                        [
                          0.4,
                          "#fde0ef"
                        ],
                        [
                          0.5,
                          "#f7f7f7"
                        ],
                        [
                          0.6,
                          "#e6f5d0"
                        ],
                        [
                          0.7,
                          "#b8e186"
                        ],
                        [
                          0.8,
                          "#7fbc41"
                        ],
                        [
                          0.9,
                          "#4d9221"
                        ],
                        [
                          1,
                          "#276419"
                        ]
                      ],
                      "sequential": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ],
                      "sequentialminus": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ]
                    },
                    "colorway": [
                      "#636efa",
                      "#EF553B",
                      "#00cc96",
                      "#ab63fa",
                      "#FFA15A",
                      "#19d3f3",
                      "#FF6692",
                      "#B6E880",
                      "#FF97FF",
                      "#FECB52"
                    ],
                    "font": {
                      "color": "#2a3f5f"
                    },
                    "geo": {
                      "bgcolor": "white",
                      "lakecolor": "white",
                      "landcolor": "white",
                      "showlakes": true,
                      "showland": true,
                      "subunitcolor": "#C8D4E3"
                    },
                    "hoverlabel": {
                      "align": "left"
                    },
                    "hovermode": "closest",
                    "mapbox": {
                      "style": "light"
                    },
                    "paper_bgcolor": "white",
                    "plot_bgcolor": "white",
                    "polar": {
                      "angularaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "radialaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      }
                    },
                    "scene": {
                      "xaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "yaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "zaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      }
                    },
                    "shapedefaults": {
                      "line": {
                        "color": "#2a3f5f"
                      }
                    },
                    "ternary": {
                      "aaxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "baxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "caxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      }
                    },
                    "title": {
                      "x": 0.05
                    },
                    "xaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    },
                    "yaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    }
                  }
                },
                "title": {
                  "text": "Financial Insights - Revenue and Cost Analysis"
                },
                "xaxis": {
                  "anchor": "y",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "xaxis2": {
                  "anchor": "y2",
                  "domain": [
                    0,
                    0.45
                  ]
                },
                "xaxis3": {
                  "anchor": "y3",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "yaxis": {
                  "anchor": "x",
                  "domain": [
                    0.625,
                    1
                  ]
                },
                "yaxis2": {
                  "anchor": "x2",
                  "domain": [
                    0,
                    0.375
                  ]
                },
                "yaxis3": {
                  "anchor": "x3",
                  "domain": [
                    0,
                    0.375
                  ]
                }
              }
            }
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Financial Insights Dashboard\n",
        "fig_financial = make_subplots(\n",
        "    rows=2, cols=2,\n",
        "    subplot_titles=('Subscription Type Distribution', 'Revenue by User Cluster',\n",
        "                   'User Value Segmentation', 'Retention Impact on Revenue'),\n",
        "    specs=[[{\"type\": \"pie\"}, {\"type\": \"bar\"}],\n",
        "           [{\"type\": \"scatter\"}, {\"type\": \"bar\"}]]\n",
        ")\n",
        "\n",
        "# 1. Subscription type distribution\n",
        "subscription_counts = df['subscription_type'].value_counts()\n",
        "fig_financial.add_trace(go.Pie(\n",
        "    labels=subscription_counts.index,\n",
        "    values=subscription_counts.values,\n",
        "    name=\"Subscription Types\",\n",
        "    hovertemplate=\"<b>%{label}</b><br>Users: %{value}<br>Percentage: %{percent}<extra></extra>\"\n",
        "), row=1, col=1)\n",
        "\n",
        "# 2. Revenue by user cluster (assuming subscription_numeric represents revenue tier)\n",
        "revenue_by_cluster = df.groupby('cluster_kmeans').agg({\n",
        "    'subscription_numeric': 'mean',\n",
        "    'user_id': 'count'\n",
        "}).round(2)\n",
        "\n",
        "fig_financial.add_trace(go.Bar(\n",
        "    x=[f'Cluster {i}' for i in revenue_by_cluster.index],\n",
        "    y=revenue_by_cluster['subscription_numeric'],\n",
        "    name=\"Avg Revenue Tier\",\n",
        "    hovertemplate=\"<b>%{x}</b><br>Avg Revenue Tier: %{y}<extra></extra>\"\n",
        "), row=1, col=2)\n",
        "\n",
        "# 3. User value segmentation (sessions vs subscription level)\n",
        "fig_financial.add_trace(go.Scatter(\n",
        "    x=df['sessions_count'],\n",
        "    y=df['subscription_numeric'],\n",
        "    mode='markers',\n",
        "    marker=dict(\n",
        "        color=df['retained'],\n",
        "        colorscale='RdYlGn',\n",
        "        size=8,\n",
        "        opacity=0.7,\n",
        "        colorbar=dict(title=\"Retained\")\n",
        "    ),\n",
        "    name=\"User Value Segmentation\",\n",
        "    hovertemplate=\"<b>User Value</b><br>Sessions: %{x}<br>Revenue Tier: %{y}<br>Retained: %{marker.color}<extra></extra>\"\n",
        "), row=2, col=1)\n",
        "\n",
        "# 4. Retention impact on revenue\n",
        "retention_revenue = df.groupby('retained').agg({\n",
        "    'subscription_numeric': 'mean',\n",
        "    'user_id': 'count'\n",
        "}).round(2)\n",
        "\n",
        "fig_financial.add_trace(go.Bar(\n",
        "    x=['Not Retained', 'Retained'],\n",
        "    y=retention_revenue['subscription_numeric'],\n",
        "    name=\"Avg Revenue by Retention\",\n",
        "    marker_color=['red', 'green'],\n",
        "    hovertemplate=\"<b>%{x}</b><br>Avg Revenue Tier: %{y}<br>Users: %{customdata}<extra></extra>\",\n",
        "    customdata=retention_revenue['user_id']\n",
        "), row=2, col=2)\n",
        "\n",
        "fig_financial.update_layout(\n",
        "    title=\"Financial Insights - Revenue and Cost Analysis\",\n",
        "    height=800,\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_financial.show()\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## 5. Geographic Analysis - Regional Performance Comparison\n",
        "\n",
        "Geographic comparison dashboards with drill-down capabilities by country and region.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {},
      "outputs": [
        {
          "data": {
            "application/vnd.plotly.v1+json": {
              "config": {
                "plotlyServerURL": "https://plot.ly"
              },
              "data": [
                {
                  "hovertemplate": "<b>%{x}</b><br>Users: %{y}<extra></extra>",
                  "name": "Total Users",
                  "type": "bar",
                  "x": [
                    "Mexico",
                    "Colombia",
                    "Argentina",
                    "Chile",
                    "Peru"
                  ],
                  "xaxis": "x",
                  "y": {
                    "bdata": "6gWmBCcE8wLeAQ==",
                    "dtype": "i2"
                  },
                  "yaxis": "y"
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>Premium Users: %{y}<extra></extra>",
                  "marker": {
                    "color": "gold"
                  },
                  "name": "Premium Users",
                  "type": "bar",
                  "x": [
                    "Mexico",
                    "Colombia",
                    "Argentina",
                    "Chile",
                    "Peru"
                  ],
                  "xaxis": "x2",
                  "y": {
                    "bdata": "ZQEhARUBtwBsAA==",
                    "dtype": "i2"
                  },
                  "yaxis": "y2"
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>Avg Duration: %{y:.1f} min<extra></extra>",
                  "marker": {
                    "color": "lightblue"
                  },
                  "name": "Avg Duration",
                  "type": "bar",
                  "x": [
                    "Colombia",
                    "Mexico",
                    "Chile",
                    "Argentina",
                    "Peru"
                  ],
                  "xaxis": "x3",
                  "y": {
                    "bdata": "w8YOrcxkU0CfNTHFIWRTQJ1MLsWZV1NAlVgBULRLU0CGkAWHG0tTQA==",
                    "dtype": "f8"
                  },
                  "yaxis": "y3"
                },
                {
                  "hovertemplate": "<b>%{x}</b><br>Retention Rate: %{y:.1f}%<extra></extra>",
                  "marker": {
                    "color": "lightgreen"
                  },
                  "name": "Retention Rate %",
                  "type": "bar",
                  "x": [
                    "Chile",
                    "Peru",
                    "Argentina",
                    "Mexico",
                    "Colombia"
                  ],
                  "xaxis": "x4",
                  "y": {
                    "bdata": "AAAAAAAAWUAAAAAAAABZQGWtUGf181hAYkkrgFHzWECU3W+U3e9YQA==",
                    "dtype": "f8"
                  },
                  "yaxis": "y4"
                }
              ],
              "layout": {
                "annotations": [
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Users by Country",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Premium Users by Country",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 1,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Average Session Duration by Country",
                    "x": 0.225,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  },
                  {
                    "font": {
                      "size": 16
                    },
                    "showarrow": false,
                    "text": "Retention Rate by Country",
                    "x": 0.775,
                    "xanchor": "center",
                    "xref": "paper",
                    "y": 0.375,
                    "yanchor": "bottom",
                    "yref": "paper"
                  }
                ],
                "height": 800,
                "template": {
                  "data": {
                    "bar": [
                      {
                        "error_x": {
                          "color": "#2a3f5f"
                        },
                        "error_y": {
                          "color": "#2a3f5f"
                        },
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "bar"
                      }
                    ],
                    "barpolar": [
                      {
                        "marker": {
                          "line": {
                            "color": "white",
                            "width": 0.5
                          },
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "barpolar"
                      }
                    ],
                    "carpet": [
                      {
                        "aaxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "baxis": {
                          "endlinecolor": "#2a3f5f",
                          "gridcolor": "#C8D4E3",
                          "linecolor": "#C8D4E3",
                          "minorgridcolor": "#C8D4E3",
                          "startlinecolor": "#2a3f5f"
                        },
                        "type": "carpet"
                      }
                    ],
                    "choropleth": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "choropleth"
                      }
                    ],
                    "contour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "contour"
                      }
                    ],
                    "contourcarpet": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "contourcarpet"
                      }
                    ],
                    "heatmap": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "heatmap"
                      }
                    ],
                    "histogram": [
                      {
                        "marker": {
                          "pattern": {
                            "fillmode": "overlay",
                            "size": 10,
                            "solidity": 0.2
                          }
                        },
                        "type": "histogram"
                      }
                    ],
                    "histogram2d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2d"
                      }
                    ],
                    "histogram2dcontour": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "histogram2dcontour"
                      }
                    ],
                    "mesh3d": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "type": "mesh3d"
                      }
                    ],
                    "parcoords": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "parcoords"
                      }
                    ],
                    "pie": [
                      {
                        "automargin": true,
                        "type": "pie"
                      }
                    ],
                    "scatter": [
                      {
                        "fillpattern": {
                          "fillmode": "overlay",
                          "size": 10,
                          "solidity": 0.2
                        },
                        "type": "scatter"
                      }
                    ],
                    "scatter3d": [
                      {
                        "line": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatter3d"
                      }
                    ],
                    "scattercarpet": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattercarpet"
                      }
                    ],
                    "scattergeo": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergeo"
                      }
                    ],
                    "scattergl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattergl"
                      }
                    ],
                    "scattermap": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermap"
                      }
                    ],
                    "scattermapbox": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scattermapbox"
                      }
                    ],
                    "scatterpolar": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolar"
                      }
                    ],
                    "scatterpolargl": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterpolargl"
                      }
                    ],
                    "scatterternary": [
                      {
                        "marker": {
                          "colorbar": {
                            "outlinewidth": 0,
                            "ticks": ""
                          }
                        },
                        "type": "scatterternary"
                      }
                    ],
                    "surface": [
                      {
                        "colorbar": {
                          "outlinewidth": 0,
                          "ticks": ""
                        },
                        "colorscale": [
                          [
                            0,
                            "#0d0887"
                          ],
                          [
                            0.1111111111111111,
                            "#46039f"
                          ],
                          [
                            0.2222222222222222,
                            "#7201a8"
                          ],
                          [
                            0.3333333333333333,
                            "#9c179e"
                          ],
                          [
                            0.4444444444444444,
                            "#bd3786"
                          ],
                          [
                            0.5555555555555556,
                            "#d8576b"
                          ],
                          [
                            0.6666666666666666,
                            "#ed7953"
                          ],
                          [
                            0.7777777777777778,
                            "#fb9f3a"
                          ],
                          [
                            0.8888888888888888,
                            "#fdca26"
                          ],
                          [
                            1,
                            "#f0f921"
                          ]
                        ],
                        "type": "surface"
                      }
                    ],
                    "table": [
                      {
                        "cells": {
                          "fill": {
                            "color": "#EBF0F8"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "header": {
                          "fill": {
                            "color": "#C8D4E3"
                          },
                          "line": {
                            "color": "white"
                          }
                        },
                        "type": "table"
                      }
                    ]
                  },
                  "layout": {
                    "annotationdefaults": {
                      "arrowcolor": "#2a3f5f",
                      "arrowhead": 0,
                      "arrowwidth": 1
                    },
                    "autotypenumbers": "strict",
                    "coloraxis": {
                      "colorbar": {
                        "outlinewidth": 0,
                        "ticks": ""
                      }
                    },
                    "colorscale": {
                      "diverging": [
                        [
                          0,
                          "#8e0152"
                        ],
                        [
                          0.1,
                          "#c51b7d"
                        ],
                        [
                          0.2,
                          "#de77ae"
                        ],
                        [
                          0.3,
                          "#f1b6da"
                        ],
                        [
                          0.4,
                          "#fde0ef"
                        ],
                        [
                          0.5,
                          "#f7f7f7"
                        ],
                        [
                          0.6,
                          "#e6f5d0"
                        ],
                        [
                          0.7,
                          "#b8e186"
                        ],
                        [
                          0.8,
                          "#7fbc41"
                        ],
                        [
                          0.9,
                          "#4d9221"
                        ],
                        [
                          1,
                          "#276419"
                        ]
                      ],
                      "sequential": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ],
                      "sequentialminus": [
                        [
                          0,
                          "#0d0887"
                        ],
                        [
                          0.1111111111111111,
                          "#46039f"
                        ],
                        [
                          0.2222222222222222,
                          "#7201a8"
                        ],
                        [
                          0.3333333333333333,
                          "#9c179e"
                        ],
                        [
                          0.4444444444444444,
                          "#bd3786"
                        ],
                        [
                          0.5555555555555556,
                          "#d8576b"
                        ],
                        [
                          0.6666666666666666,
                          "#ed7953"
                        ],
                        [
                          0.7777777777777778,
                          "#fb9f3a"
                        ],
                        [
                          0.8888888888888888,
                          "#fdca26"
                        ],
                        [
                          1,
                          "#f0f921"
                        ]
                      ]
                    },
                    "colorway": [
                      "#636efa",
                      "#EF553B",
                      "#00cc96",
                      "#ab63fa",
                      "#FFA15A",
                      "#19d3f3",
                      "#FF6692",
                      "#B6E880",
                      "#FF97FF",
                      "#FECB52"
                    ],
                    "font": {
                      "color": "#2a3f5f"
                    },
                    "geo": {
                      "bgcolor": "white",
                      "lakecolor": "white",
                      "landcolor": "white",
                      "showlakes": true,
                      "showland": true,
                      "subunitcolor": "#C8D4E3"
                    },
                    "hoverlabel": {
                      "align": "left"
                    },
                    "hovermode": "closest",
                    "mapbox": {
                      "style": "light"
                    },
                    "paper_bgcolor": "white",
                    "plot_bgcolor": "white",
                    "polar": {
                      "angularaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "radialaxis": {
                        "gridcolor": "#EBF0F8",
                        "linecolor": "#EBF0F8",
                        "ticks": ""
                      }
                    },
                    "scene": {
                      "xaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "yaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      },
                      "zaxis": {
                        "backgroundcolor": "white",
                        "gridcolor": "#DFE8F3",
                        "gridwidth": 2,
                        "linecolor": "#EBF0F8",
                        "showbackground": true,
                        "ticks": "",
                        "zerolinecolor": "#EBF0F8"
                      }
                    },
                    "shapedefaults": {
                      "line": {
                        "color": "#2a3f5f"
                      }
                    },
                    "ternary": {
                      "aaxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "baxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      },
                      "bgcolor": "white",
                      "caxis": {
                        "gridcolor": "#DFE8F3",
                        "linecolor": "#A2B1C6",
                        "ticks": ""
                      }
                    },
                    "title": {
                      "x": 0.05
                    },
                    "xaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    },
                    "yaxis": {
                      "automargin": true,
                      "gridcolor": "#EBF0F8",
                      "linecolor": "#EBF0F8",
                      "ticks": "",
                      "title": {
                        "standoff": 15
                      },
                      "zerolinecolor": "#EBF0F8",
                      "zerolinewidth": 2
                    }
                  }
                },
                "title": {
                  "text": "Geographic Analysis - Regional Performance Comparison"
                },
                "xaxis": {
                  "anchor": "y",
                  "domain": [
                    0,
                    0.45
                  ]
                },
                "xaxis2": {
                  "anchor": "y2",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "xaxis3": {
                  "anchor": "y3",
                  "domain": [
                    0,
                    0.45
                  ]
                },
                "xaxis4": {
                  "anchor": "y4",
                  "domain": [
                    0.55,
                    1
                  ]
                },
                "yaxis": {
                  "anchor": "x",
                  "domain": [
                    0.625,
                    1
                  ]
                },
                "yaxis2": {
                  "anchor": "x2",
                  "domain": [
                    0.625,
                    1
                  ]
                },
                "yaxis3": {
                  "anchor": "x3",
                  "domain": [
                    0,
                    0.375
                  ]
                },
                "yaxis4": {
                  "anchor": "x4",
                  "domain": [
                    0,
                    0.375
                  ]
                }
              }
            }
          },
          "metadata": {},
          "output_type": "display_data"
        }
      ],
      "source": [
        "# Geographic Analysis Dashboard\n",
        "fig_geographic = make_subplots(\n",
        "    rows=2, cols=2,\n",
        "    subplot_titles=('Users by Country', 'Premium Users by Country',\n",
        "                   'Average Session Duration by Country', 'Retention Rate by Country'),\n",
        "    specs=[[{\"type\": \"bar\"}, {\"type\": \"bar\"}],\n",
        "           [{\"type\": \"bar\"}, {\"type\": \"bar\"}]]\n",
        ")\n",
        "\n",
        "# 1. Users by country\n",
        "country_users = df['country'].value_counts().head(15)\n",
        "fig_geographic.add_trace(go.Bar(\n",
        "    x=country_users.index,\n",
        "    y=country_users.values,\n",
        "    name=\"Total Users\",\n",
        "    hovertemplate=\"<b>%{x}</b><br>Users: %{y}<extra></extra>\"\n",
        "), row=1, col=1)\n",
        "\n",
        "# 2. Premium users by country\n",
        "premium_by_country = df[df['subscription_type'] == 'Premium']['country'].value_counts().head(15)\n",
        "fig_geographic.add_trace(go.Bar(\n",
        "    x=premium_by_country.index,\n",
        "    y=premium_by_country.values,\n",
        "    name=\"Premium Users\",\n",
        "    marker_color='gold',\n",
        "    hovertemplate=\"<b>%{x}</b><br>Premium Users: %{y}<extra></extra>\"\n",
        "), row=1, col=2)\n",
        "\n",
        "# 3. Average session duration by country\n",
        "duration_by_country = df.groupby('country')['avg_duration'].mean().sort_values(ascending=False).head(15)\n",
        "fig_geographic.add_trace(go.Bar(\n",
        "    x=duration_by_country.index,\n",
        "    y=duration_by_country.values,\n",
        "    name=\"Avg Duration\",\n",
        "    marker_color='lightblue',\n",
        "    hovertemplate=\"<b>%{x}</b><br>Avg Duration: %{y:.1f} min<extra></extra>\"\n",
        "), row=2, col=1)\n",
        "\n",
        "# 4. Retention rate by country\n",
        "retention_by_country = df.groupby('country')['retained'].mean().sort_values(ascending=False).head(15) * 100\n",
        "fig_geographic.add_trace(go.Bar(\n",
        "    x=retention_by_country.index,\n",
        "    y=retention_by_country.values,\n",
        "    name=\"Retention Rate %\",\n",
        "    marker_color='lightgreen',\n",
        "    hovertemplate=\"<b>%{x}</b><br>Retention Rate: %{y:.1f}%<extra></extra>\"\n",
        "), row=2, col=2)\n",
        "\n",
        "fig_geographic.update_layout(\n",
        "    title=\"Geographic Analysis - Regional Performance Comparison\",\n",
        "    height=800,\n",
        "    template=\"plotly_white\"\n",
        ")\n",
        "\n",
        "fig_geographic.show()\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "## Mobile-Responsive Streamlit Dashboard\n",
        "\n",
        "Creating a mobile-responsive interactive dashboard using Streamlit for real-time exploration.\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": 15,
      "metadata": {},
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Mobile-responsive Streamlit dashboard created successfully!\n",
            "To run the dashboard, use: streamlit run streamlit_dashboard.py\n"
          ]
        }
      ],
      "source": [
        "# Create Mobile-Responsive Streamlit Dashboard\n",
        "streamlit_code = '''\n",
        "import streamlit as st\n",
        "import pandas as pd\n",
        "import plotly.express as px\n",
        "import plotly.graph_objects as go\n",
        "from plotly.subplots import make_subplots\n",
        "\n",
        "# Page configuration for mobile responsiveness\n",
        "st.set_page_config(\n",
        "    page_title=\"Streaming Platform Analytics Dashboard\",\n",
        "    page_icon=\"\",\n",
        "    layout=\"wide\",\n",
        "    initial_sidebar_state=\"expanded\"\n",
        ")\n",
        "\n",
        "# Load data\n",
        "@st.cache_data\n",
        "def load_data():\n",
        "    return pd.read_csv('notebooks/output/user_aggregation_with_clusters.csv')\n",
        "\n",
        "df = load_data()\n",
        "\n",
        "# Sidebar filters\n",
        "st.sidebar.header(\" Filters\")\n",
        "selected_countries = st.sidebar.multiselect(\n",
        "    \"Select Countries\",\n",
        "    options=df['country'].unique(),\n",
        "    default=df['country'].unique()[:5]\n",
        ")\n",
        "\n",
        "selected_subscriptions = st.sidebar.multiselect(\n",
        "    \"Select Subscription Types\",\n",
        "    options=df['subscription_type'].unique(),\n",
        "    default=df['subscription_type'].unique()\n",
        ")\n",
        "\n",
        "selected_clusters = st.sidebar.multiselect(\n",
        "    \"Select User Clusters\",\n",
        "    options=sorted(df['cluster_kmeans'].unique()),\n",
        "    default=sorted(df['cluster_kmeans'].unique())\n",
        ")\n",
        "\n",
        "# Filter data\n",
        "filtered_df = df[\n",
        "    (df['country'].isin(selected_countries)) &\n",
        "    (df['subscription_type'].isin(selected_subscriptions)) &\n",
        "    (df['cluster_kmeans'].isin(selected_clusters))\n",
        "]\n",
        "\n",
        "# Main dashboard\n",
        "st.title(\" Streaming Platform Analytics Dashboard\")\n",
        "st.markdown(\"Real-time insights into user behavior, content performance, and business metrics\")\n",
        "\n",
        "# KPI Cards (Mobile responsive)\n",
        "col1, col2, col3, col4 = st.columns(4)\n",
        "\n",
        "with col1:\n",
        "    st.metric(\n",
        "        label=\"Total Users\",\n",
        "        value=f\"{len(filtered_df):,}\",\n",
        "        delta=f\"{len(filtered_df) - len(df):,}\"\n",
        "    )\n",
        "\n",
        "with col2:\n",
        "    total_sessions = filtered_df['sessions_count'].sum()\n",
        "    st.metric(\n",
        "        label=\"Total Sessions\",\n",
        "        value=f\"{total_sessions:,}\",\n",
        "        delta=f\"{total_sessions - df['sessions_count'].sum():,}\"\n",
        "    )\n",
        "\n",
        "with col3:\n",
        "    retention_rate = (filtered_df['retained'].sum() / len(filtered_df)) * 100\n",
        "    st.metric(\n",
        "        label=\"Retention Rate\",\n",
        "        value=f\"{retention_rate:.1f}%\",\n",
        "        delta=f\"{retention_rate - (df['retained'].sum() / len(df)) * 100:.1f}%\"\n",
        "    )\n",
        "\n",
        "with col4:\n",
        "    avg_duration = filtered_df['avg_duration'].mean()\n",
        "    st.metric(\n",
        "        label=\"Avg Session Duration\",\n",
        "        value=f\"{avg_duration:.1f} min\",\n",
        "        delta=f\"{avg_duration - df['avg_duration'].mean():.1f} min\"\n",
        "    )\n",
        "\n",
        "# Charts (Mobile responsive)\n",
        "col1, col2 = st.columns(2)\n",
        "\n",
        "with col1:\n",
        "    st.subheader(\"User Distribution by Country\")\n",
        "    country_counts = filtered_df['country'].value_counts().head(10)\n",
        "    fig = px.bar(\n",
        "        x=country_counts.index,\n",
        "        y=country_counts.values,\n",
        "        title=\"Users by Country\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "with col2:\n",
        "    st.subheader(\"Subscription Type Distribution\")\n",
        "    subscription_counts = filtered_df['subscription_type'].value_counts()\n",
        "    fig = px.pie(\n",
        "        values=subscription_counts.values,\n",
        "        names=subscription_counts.index,\n",
        "        title=\"Subscription Types\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "# User Segmentation Analysis\n",
        "st.subheader(\"User Segmentation Analysis\")\n",
        "col1, col2 = st.columns(2)\n",
        "\n",
        "with col1:\n",
        "    cluster_counts = filtered_df['cluster_kmeans'].value_counts()\n",
        "    fig = px.bar(\n",
        "        x=[f'Cluster {i}' for i in cluster_counts.index],\n",
        "        y=cluster_counts.values,\n",
        "        title=\"User Clusters Distribution\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "with col2:\n",
        "    fig = px.box(\n",
        "        filtered_df,\n",
        "        x='cluster_kmeans',\n",
        "        y='age',\n",
        "        title=\"Age Distribution by Cluster\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "# Content Performance\n",
        "st.subheader(\"Content Performance Metrics\")\n",
        "col1, col2 = st.columns(2)\n",
        "\n",
        "with col1:\n",
        "    fig = px.scatter(\n",
        "        filtered_df,\n",
        "        x='sessions_count',\n",
        "        y='avg_duration',\n",
        "        color='subscription_type',\n",
        "        size='avg_completion',\n",
        "        title=\"Sessions vs Duration (bubble size = completion rate)\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "with col2:\n",
        "    fig = px.histogram(\n",
        "        filtered_df,\n",
        "        x='avg_completion',\n",
        "        nbins=20,\n",
        "        title=\"Completion Rate Distribution\"\n",
        "    )\n",
        "    st.plotly_chart(fig, use_container_width=True)\n",
        "\n",
        "# Geographic Analysis\n",
        "st.subheader(\"Geographic Performance Analysis\")\n",
        "country_metrics = filtered_df.groupby('country').agg({\n",
        "    'sessions_count': 'sum',\n",
        "    'avg_duration': 'mean',\n",
        "    'retained': 'mean',\n",
        "    'subscription_type': lambda x: (x == 'Premium').mean()\n",
        "}).round(3)\n",
        "\n",
        "st.dataframe(country_metrics, use_container_width=True)\n",
        "'''\n",
        "\n",
        "# Save the Streamlit app code\n",
        "with open('streamlit_dashboard.py', 'w') as f:\n",
        "    f.write(streamlit_code)\n",
        "\n",
        "print(\"Mobile-responsive Streamlit dashboard created successfully!\")\n",
        "print(\"To run the dashboard, use: streamlit run streamlit_dashboard.py\")\n"
      ]
    },
    {
      "cell_type": "raw",
      "metadata": {
        "vscode": {
          "languageId": "raw"
        }
      },
      "source": [
        "##  Deliverables Completed - Activity 3.1: Interactive Dashboards\n",
        "\n",
        "### All Required Deliverables Implemented:\n",
        "\n",
        "1. **Executive KPI dashboard with real-time metrics**\n",
        "   - Interactive KPI indicators with live data\n",
        "   - Real-time metrics calculation and display\n",
        "   - Executive-level performance indicators\n",
        "\n",
        "2. **Interactive visualizations by user segments**\n",
        "   - User cluster analysis with drill-down capabilities\n",
        "   - Demographic and behavior analysis by segments\n",
        "   - Interactive hover tooltips and filtering\n",
        "\n",
        "3. **Temporal trend analysis with drill-down capabilities**\n",
        "   - Session distribution analysis\n",
        "   - Completion rate trends by subscription type\n",
        "   - Content engagement patterns over time\n",
        "\n",
        "4. **Geographic comparison dashboards**\n",
        "   - Country-level performance comparison\n",
        "   - Regional analysis with drill-down capabilities\n",
        "   - Geographic user distribution and metrics\n",
        "\n",
        "5. **Mobile-responsive design implementation**\n",
        "   - Streamlit dashboard with responsive layout\n",
        "   - Mobile-optimized interface\n",
        "   - Adaptive column layouts for different screen sizes\n",
        "\n",
        "### All Required Dashboard Components:\n",
        "\n",
        "1. ** Executive Summary**: Key metrics overview with real-time KPIs\n",
        "2. ** User Analytics**: Demographics and behavior analysis by clusters\n",
        "3. ** Content Performance**: Popularity and engagement metrics\n",
        "4. ** Financial Insights**: Revenue and cost analysis by subscription types\n",
        "5. ** Geographic Analysis**: Regional performance comparison\n",
        "\n",
        "### Technical Implementation:\n",
        "- **Data Source**: `user_aggregation_with_clusters.csv` (5,001 users)\n",
        "- **Visualization Libraries**: Plotly, Streamlit\n",
        "- **Interactive Features**: Hover tooltips, filtering, drill-down capabilities\n",
        "- **Mobile Responsive**: Adaptive layouts and mobile-optimized design\n"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": ".venv",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.13.2"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 2
}
